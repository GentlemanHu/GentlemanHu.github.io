<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Azure中WindowsServer没GUI</title>
    <url>/posts/9ff4.html</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul>
<li>为了节省磁盘空间费用，安装windowsserver minimal版本</li>
<li>默认版本必须128g以上，而小的支持64g</li>
<li>然而，安装后桌面通过remote连接，全是黑的，终端都没有，快捷键失效，无法调出cmd或者powershell，等于说是废的</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20201006172316.png" alt="windows2012R2screenshot"></li>
<li>手抖关掉刚开机的cmd后，再也无法调出来了。。。</li>
</ul>
<h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><p>经过一番谷歌，找了一个对于此问题可行的办法。</p>
<p><a href="https://ravingroo.com/1720/windows-server-2012-r2-boots-to-black-screen-command-prompt-gui-core/" target="_blank" rel="noopener">link</a></p>
<ul>
<li>在azure面板中，先把虚拟机重启。</li>
<li>然后重启后，remote连接，cmd输入</li>
<li><code>Dism /online /enable-feature /featurename:Server-Gui-Mgmt /featurename:Server-Gui-Shell /featurename:ServerCore-FullServer /all</code></li>
<li>等待一段时间，安装完servergui，就可以看到桌面了。</li>
</ul>
]]></content>
      <categories>
        <category>日常杂记</category>
        <category>随手记</category>
      </categories>
  </entry>
  <entry>
    <title>Clover配置引导Linux内核</title>
    <url>/posts/dc6b.html</url>
    <content><![CDATA[<h2 id="Clover配置引导Linux内核"><a href="#Clover配置引导Linux内核" class="headerlink" title="Clover配置引导Linux内核"></a>Clover配置引导Linux内核</h2><blockquote>
<p>整体过程：</p>
<ol>
<li>通过可以引导Linux的引导工具进入需要引导的系统</li>
<li>拷贝该系统<code>/boot</code>下引导文件到Clover所在分区</li>
<li>Linux<code>/boot</code>绑定到Clover分区</li>
<li>Clover配置引导路径</li>
</ol>
</blockquote>
<ol>
<li><h3 id="从U盘安装盘进入Live系统"><a href="#从U盘安装盘进入Live系统" class="headerlink" title="从U盘安装盘进入Live系统"></a>从U盘安装盘进入Live系统</h3></li>
</ol>
<ul>
<li>在live系统内同时编辑两个Manjaro系统</li>
<li>本机本身安装了两个Manjaro版本，一个gnome桌面系统，一个KDE。</li>
<li>由于操作不当，失去了相应的引导文件，只能通过Kali的引导进入，或者通过rEfind。</li>
<li>为两个Manjaro配置Clover引导，步骤类似。</li>
</ul>
<ol start="2">
<li><h3 id="复制boot文件并绑定"><a href="#复制boot文件并绑定" class="headerlink" title="复制boot文件并绑定"></a>复制boot文件并绑定</h3><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200820200348.png" alt="image-20200815122725202"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir /esp</span><br><span class="line">sudo lsblk</span><br><span class="line">sudo umount /boot/efi</span><br><span class="line">sudo mount /dev/sdb1 /esp</span><br><span class="line">sudo mkdir /esp/EFI/Manjaro</span><br><span class="line">mkdir ~/Documents/Boot</span><br><span class="line">sudo sudo cp -r /boot ~/Documents/Boot</span><br><span class="line">sudo rm -rf /boot/*</span><br><span class="line">mount --bind /esp/EFI/Manjaro/ /boot</span><br><span class="line">sudo cp -r ~/Documents/Boot/* /boot/</span><br><span class="line">sudo nano /etc/fstab</span><br></pre></td></tr></table></figure>

<blockquote>
<p>命令含义</p>
</blockquote>
<ul>
<li><p>创建esp挂载点</p>
</li>
<li><p>卸载本系统/boot/efi挂载点</p>
</li>
<li><p>查看本机所有设备，并把Clover分区的efi挂载到esp</p>
</li>
<li><p>在Clover分区创建Manjaro引导文件夹</p>
</li>
<li><p>备份</p>
</li>
<li><p>删除本系统/boot/efi下引导文件</p>
</li>
<li><p>把Clover分区efi挂载绑定到本系统/boot</p>
</li>
<li><p>重新拷贝刚才备份的引导到/boot/efi</p>
</li>
<li><p>编辑fstab，把挂载绑定的分区目录写入文件内</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815124027873.png" alt="image-20200815124027873"></p>
<blockquote>
<p>其中绑定的挂载点看实际情况</p>
</blockquote>
<p>注意保存相应UUID信息，为Clover引导中使用。</p>
</li>
</ul>
<p>保存disk UUID和其他引导信息</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;etc&#x2F;fstab: static file system information. </span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"></span><br><span class="line"># Use &#39;blkid&#39; to print the universally unique identifier for a device; this may </span><br><span class="line"></span><br><span class="line"># be used with UUID&#x3D; as a more robust way to name devices that works even if </span><br><span class="line"></span><br><span class="line"># disks are added and removed. See fstab(5). </span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"></span><br><span class="line"># &lt;file system&gt;             &lt;mount point&gt;  &lt;type&gt;  &lt;options&gt;  &lt;dump&gt;  &lt;pass&gt; </span><br><span class="line"></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">UUID&#x3D;17CC-0C7B                            &#x2F;esp      vfat    defaults,noatime 0 2 </span><br><span class="line"></span><br><span class="line">&#x2F;esp&#x2F;EFI&#x2F;Manjaro&#x2F;                         &#x2F;boot     none    defaults,bind 0 0 </span><br><span class="line"></span><br><span class="line">UUID&#x3D;2fefa979-02ca-49bc-a9f2-79ac16838e4a &#x2F;              ext4    defaults,noatime 0 1</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /etc/fstab: static file system information.  </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Use <span class="string">'blkid'</span> to <span class="built_in">print</span> the universally unique identifier <span class="keyword">for</span> a device; this may  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> be used with UUID= as a more robust way to name devices that works even <span class="keyword">if</span>  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> disks are added and removed. See fstab(5).  </span></span><br><span class="line"><span class="meta">#</span><span class="bash">  </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;file system&gt;             &lt;mount point&gt;  &lt;<span class="built_in">type</span>&gt;  &lt;options&gt;  &lt;dump&gt;  &lt;pass&gt;  </span></span><br><span class="line"> </span><br><span class="line">UUID=44b45fb0-eaf8-4f32-8bfc-f58c18d041ff /              ext4    defaults,noatime 0 1  </span><br><span class="line">UUID=17CC-0C7B                            /esp     vfat    defaults,noatime 0 2  </span><br><span class="line">/esp/EFI/KDEManjaro/ /boot                         none   defaults,bind 0 0</span><br></pre></td></tr></table></figure>

<p>两个系统都保存记录下来。</p>
</li>
<li><h3 id="进入mac用Clover编辑引导路径"><a href="#进入mac用Clover编辑引导路径" class="headerlink" title="进入mac用Clover编辑引导路径"></a>进入mac用Clover编辑引导路径</h3><p>可以手工编辑plist文件，也可以用Clover Configurator可视化编辑</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815134017898.png" alt="image-20200815134017898"></p>
</li>
<li><h3 id="重启解决"><a href="#重启解决" class="headerlink" title="重启解决"></a>重启解决</h3></li>
</ol>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815133543811.png" alt="image-20200815133543811"></p>
<p>最终完成EFI目录，一个为KDE，一个为Gnome。</p>
<p>编辑好Clover后，重启可顺利选择相应系统引导进入。</p>
<p>进入到GUi栏，在Custom Entries里添加Entry</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815134110441.png" alt="image-20200815134110441"></p>
<p>卷目录写Clover所在盘UUID</p>
<p>引导内核路径填前面复制好的内核路径</p>
<p>引导参数填前边保存的root uuid</p>
<p>其他的类型Linux，默认即可</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815134326899.png" alt="image-20200815134326899"></p>
<h3 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h3><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200820200817.png" alt="image-20200815133724833"></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200815134356505.png" alt="image-20200815134356505"></p>
<ul>
<li><p>为了更方便，又添加了rEfind引导</p>
</li>
<li><p>Clover +rEfind 同时运作</p>
<p>Clover引导黑果和Win，在Clover内配置rEfind引导，当需要启动Linux时，通过rEfind来引导相应内核。</p>
<p>同时也保留了kali自带的UEFI引导，也能方便引导其他Linux。</p>
</li>
</ul>
<hr>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><p><a href="https://sourceforge.net/p/cloverefiboot/wiki/GUI/#scan-kernel" target="_blank" rel="noopener">Clover Wiki</a></p>
<p><a href="https://www.youtube.com/watch?v=NhyE1EXnr_s" target="_blank" rel="noopener">Hide Unwanted Volumes</a></p>
<p><a href="https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&ved=2ahUKEwi02bv9kpXrAhVUE4gKHTI5DwQQFjADegQIAxAB&url=https%3A%2F%2Fwww.tonymacx86.com%2Fattachments%2Fmanjaro-clover-pdf.239748%2F&usg=AOvVaw03stFWySo_f_j25o-CIyqE" target="_blank" rel="noopener">How to boot Manjaro from Clover on a Hackintosh</a></p>
<p><a href="https://www.cnblogs.com/xingmuxin/p/8446115.html" target="_blank" rel="noopener">mount –bind</a></p>
]]></content>
      <categories>
        <category>玩玩</category>
        <category>黑苹果</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
        <tag>Clover</tag>
        <tag>Manjaro</tag>
        <tag>引导</tag>
      </tags>
  </entry>
  <entry>
    <title>Calibre+rclone+google drive搭建个人书库记录</title>
    <url>/posts/811f.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote>
<p>记录了一些折腾过程</p>
</blockquote>
<details>
    <summary>一些缘由</summary>

<h3 id="E5"><a href="#E5" class="headerlink" title="E5"></a>E5</h3><ol>
<li><p>前一段微软开发者E5订阅很火热，也顺手申请了一个，主要还是看上<code>OneDrive</code>的存储，E5可以拥有25个子账号，所以空间至少<code>25x5T</code>，当然也用不了这么多。</p>
</li>
<li><p>由于E5可能是参照开发者使用情况续订的，所以同时也部署了<a href="https://github.com/GentlemanHu/OwnE5" target="_blank" rel="noopener"><code>自动调用API续订</code></a>程序来尝试维持续订。</p>
</li>
</ol>
<ol start="3">
<li>搭建了各种索引程序作为个人网盘，总之，尝试了多款，各有优势吧。</li>
</ol>
<h3 id="TeamDrive"><a href="#TeamDrive" class="headerlink" title="TeamDrive"></a>TeamDrive</h3><ol>
<li><p>GoogleDrive订阅G Suit教育版或者商业版是无限容量的（$$$)，教育邮箱之前搞过一个，翻车了。</p>
</li>
<li><p>偶然发现还有TeamDrive也是无限容量，就也顺手搞了一个玩玩看。</p>
</li>
<li><p>又发现各种玩法，转存什么的，利用SA账号转存，TG机器人转存等，顺手也搭建了。</p>
<blockquote>
<p><a href="https://github.com/iwestlin/gd-utils" target="_blank" rel="noopener">gd-utils</a></p>
</blockquote>
</li>
</ol>
<h3 id="个人演示站"><a href="#个人演示站" class="headerlink" title="个人演示站"></a>个人演示站</h3><ul>
<li>OD（暂不）</li>
<li>GD<ul>
<li><a href="https://pie.holyfuck.ml" target="_blank" rel="noopener">https://pie.holyfuck.ml</a></li>
<li><a href="https://pie.keepfuture.live" target="_blank" rel="noopener">https://pie.keepfuture.live</a></li>
</ul>
</li>
</ul>
<h3 id="折腾开始"><a href="#折腾开始" class="headerlink" title="折腾开始"></a>折腾开始</h3><ul>
<li>各种离线下载，转存机器人也都玩过了，就想玩玩新鲜的。</li>
<li>于是想到了搭建个人书库，利用这些<code>强大的</code>存储作支持。</li>
<li>当然，OD和GD都是可以的，但是看到<code>calibre-web</code>这款管理面板原生支持GD，就选择了GD</li>
</ul>
</details>

<h2 id="一、Calibre-web搭建与配置"><a href="#一、Calibre-web搭建与配置" class="headerlink" title="一、Calibre-web搭建与配置"></a>一、Calibre-web搭建与配置</h2><h3 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h3><h4 id="py依赖部署版"><a href="#py依赖部署版" class="headerlink" title="py依赖部署版"></a>py依赖部署版</h4><p><a href="https://github.com/janeczku/calibre-web" target="_blank" rel="noopener">calibre-web</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> 仓库</span><br><span class="line"><span class="built_in">cd</span> </span><br><span class="line"><span class="comment"># python3 (python3.x) </span></span><br><span class="line">pip3 install --target vendor -r requirements.txt </span><br><span class="line"><span class="comment"># (python2.7).</span></span><br><span class="line">pip install --target vendor -r requirements.txt</span><br></pre></td></tr></table></figure>

<p>执行启动命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">python cps.py</span><br><span class="line">或者 </span><br><span class="line">nohup python cps.py</span><br></pre></td></tr></table></figure>

<p>至此，calibre的面板calibre-web搭建成功，接下来跟GD存储端对接。</p>
<p>面板原生支持GD</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/20200802184446.png" alt=""></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/20200802184359.png" alt=""></p>
<p><a href="https://github.com/janeczku/calibre-web/wiki/Configuration#using-google-drive-integration" target="_blank" rel="noopener">doc</a></p>
<p>由于某些原因，采用下边rclone挂载GD方式。</p>
<h4 id="docker版"><a href="#docker版" class="headerlink" title="docker版"></a><del>docker版</del></h4><blockquote>
<p>docker安装可谓最简单，可惜各种折腾未成功，还是一般安装吧~</p>
<p>⚠️以下只是记录了报错等信息，尝试修复过程</p>
</blockquote>
<p><a href="https://hub.docker.com/r/linuxserver/calibre-web/" target="_blank" rel="noopener">calibre-docker</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker create \</span><br><span class="line">  --name=calibre-web \</span><br><span class="line">  -e PUID=1000 \</span><br><span class="line">  -e PGID=1000 \</span><br><span class="line">  -e TZ=Europe/London \</span><br><span class="line">  -e DOCKER_MODS=linuxserver/calibre-web:calibre \</span><br><span class="line">  -p 8083:8083 \</span><br><span class="line">  -v /media/config:/config \</span><br><span class="line">  -v /media/Books:/books \</span><br><span class="line">  --restart unless-stopped \</span><br><span class="line">  linuxserver/calibre-web</span><br></pre></td></tr></table></figure>

<ul>
<li><p>安装好之后，尽管已经映射，docker容器内不能读取到从host外部共享到内部的目录，所以，挂载的GD也就不能用。</p>
</li>
<li><p>找了一番，有个rclone-mount的docker镜像是专门为此而生。</p>
<blockquote>
<p><a href="https://github.com/tynor88/docker-rclone-mount" target="_blank" rel="noopener">rclone-mount-docker</a></p>
<p><a href="https://hub.docker.com/r/mumiehub/rclone-mount/" target="_blank" rel="noopener">Docker-rclone</a></p>
</blockquote>
</li>
<li><p><code>docker build -t rclone-docker:rclone .</code></p>
</li>
<li><p><code>docker run -t -i rclone-docker:rclone /bin/bash</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker start rclone-mount</span><br><span class="line">Error response from daemon: oci runtime error: container_linux.go:235: starting container process caused <span class="string">"process_linux.go:339: running prestart hook 2 caused \"error running hook: exit status 1, stdout: , stderr: \""</span></span><br><span class="line">Error: failed to start containers: rclone-mount</span><br></pre></td></tr></table></figure>
</li>
<li><p>报错,google后需要在linux内核启动namespace什么的，下边是教程</p>
</li>
<li><p><a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html-single/getting_started_with_containers/index#user_namespaces_options" target="_blank" rel="noopener">https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html-single/getting_started_with_containers/index#user_namespaces_options</a></p>
</li>
</ul>
<blockquote>
<p>然而需要重启，由于部署了一堆闲玩的东西，很多没部署service自启动，重启后说不定就不知道到在哪启动了，所以放弃。</p>
</blockquote>
<h3 id="后台配置"><a href="#后台配置" class="headerlink" title="后台配置"></a>后台配置</h3><blockquote>
<p>详见下边第三步</p>
</blockquote>
<h2 id="二、rclone挂载GD"><a href="#二、rclone挂载GD" class="headerlink" title="二、rclone挂载GD"></a>二、rclone挂载GD</h2><h3 id="普通版"><a href="#普通版" class="headerlink" title="普通版"></a>普通版</h3><h4 id="安装rclone"><a href="#安装rclone" class="headerlink" title="安装rclone"></a>安装<a href="https://rclone.org/install/#script-installation" target="_blank" rel="noopener">rclone</a></h4><h4 id="配置GD并挂载"><a href="#配置GD并挂载" class="headerlink" title="配置GD并挂载"></a>配置GD并挂载</h4><ul>
<li><p><code>rclone config</code></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200802185121351.png" alt="image-20200802185121351"></p>
<blockquote>
<p> 新建remote</p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200802185159925.png" alt="image-20200802185159925"></p>
<blockquote>
<p>选13（具体看版本），google drive</p>
<p>client_id和secret_id可以不写，默认用的官方的。</p>
<p>接下来都选1</p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200802185330214.png" alt="image-20200802185330214"></p>
</li>
</ul>
<blockquote>
<p>根据提示，验证那里，由于是在vps没显示器，选n，点开链接验证后，复制代码到下边。</p>
<p>配置成TeamDrive</p>
<p>然后一路yes就行了</p>
</blockquote>
<h4 id="挂载磁盘点，配置自启动"><a href="#挂载磁盘点，配置自启动" class="headerlink" title="挂载磁盘点，配置自启动"></a>挂载磁盘点，配置自启动</h4><ul>
<li>新建挂载文件夹，我建在<code>/media/Books</code></li>
<li>配置service自启动</li>
</ul>
<p>将下边脚本改好后，新建service</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/books.service</span><br></pre></td></tr></table></figure>

<p>下边复制到新建的service中</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Rclone</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/usr/bin/rclone mount Books:/ /media/Books/ --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 --vfs-cache-mode writes #针对calibre读取数据库加的</span><br><span class="line">Restart=on-abort</span><br><span class="line">User=root</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=default.target</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要改两个地方，<code>Books:/</code> 和 <code>/media/Books</code>，第一个为rclone配置的名称，第二个为本地挂载点。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload;</span><br><span class="line">systemctl restart books;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看状态</span></span><br><span class="line">systemctl status books -l;</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 开机自启</span></span></span><br><span class="line">systemctl enable books;</span><br></pre></td></tr></table></figure>

<p>进入挂载点，ls能看到盘内容，成功~</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200804122150879.png" alt="image-20200804122150879"></p>
<h3 id="docker版-1"><a href="#docker版-1" class="headerlink" title="docker版"></a><del>docker版</del></h3><blockquote>
<p>docker得折腾更多，就不用了</p>
<p>下边只贴上了启动参数</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name rclone-mount \</span><br><span class="line">    --restart=unless-stopped \</span><br><span class="line">    --<span class="built_in">cap</span>-add SYS_ADMIN \</span><br><span class="line">    --device /dev/fuse \</span><br><span class="line">    --security-opt apparmor:unconfined \</span><br><span class="line">    -e RemotePath=<span class="string">"Bookgo:"</span> \</span><br><span class="line">    -e MountCommands=<span class="string">"--copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --umask 000 --vfs-cache-mode writes"</span> \</span><br><span class="line">    -v /root/.config/rclone:/config \</span><br><span class="line">    -v /media/Books:/mnt/mediaefs:shared \</span><br><span class="line">    mumiehub/rclone-mount</span><br></pre></td></tr></table></figure>

<h2 id="三、calibre安装与书库配置"><a href="#三、calibre安装与书库配置" class="headerlink" title="三、calibre安装与书库配置"></a>三、calibre安装与书库配置</h2><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/20200802184755.png" alt=""></p>
<p>安装成功，并配置好书库后，进入web登录后就是这样的界面。</p>
<blockquote>
<p>然而，第一步中安装好的web面板，第一次登录，会让你设置书库地址，路径内必须有<code>metadata.db</code>书库的数据库文件。</p>
<p>⚠️如果第一次用的话，没有metadata.db，必须手动搞一个，或者下载<a href="https://drive.google.com/file/d/189tv5i5SNT6rivLLLvCmC2JeLtODmSS1/view?usp=sharing" target="_blank" rel="noopener">这个</a>空白的书库放在路径内。</p>
</blockquote>
<h3 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h3><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200804142346644.png" alt=""></p>
<ul>
<li><p>这样，输入初始admin，admin123用户登入，其他后台自行设置就行了</p>
</li>
<li><p>初始密码及时更改</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200804142454950.png" alt="image-20200804142454950"></p>
<p>功能还可以，有自动推送kindle功能。</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200804142552774.png" alt="image-20200804142552774"></p>
</li>
<li><p>还有格式转换等，需要自行下载插件，路径配置好。</p>
</li>
</ul>
<h3 id="导入书库"><a href="#导入书库" class="headerlink" title="导入书库"></a>导入书库</h3><ul>
<li>上一步初始化后，书库只有一本Quick Start默认书</li>
<li>可以通过面板上传按钮自行上传</li>
<li>也可以通过calibre命令行导入其他一些书库</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/20200802184602.png" alt=""></p>
<h4 id="创建calibre数据库"><a href="#创建calibre数据库" class="headerlink" title="创建calibre数据库"></a>创建calibre数据库</h4><blockquote>
<p>这里需要用到calibre官方程序，尽管在vps不能可视化操作，但是命令行能用，导入书籍信息，自动归类等还是很好用</p>
</blockquote>
<ul>
<li><ol>
<li>下载安装calibre<br><a href="https://calibre-ebook.com/download_linux" target="_blank" rel="noopener">download</a></li>
</ol>
<blockquote>
<p>仔细参照官方要求环境安装，如果环境不匹配，很折腾</p>
<p>python：2.7.9+（&lt;3)</p>
<p>gcc: 5.4.0+</p>
<p>具体看安装时候提示信息，不匹配会出现各种问题</p>
</blockquote>
</li>
<li><ol start="2">
<li>使用<code>calibredb</code>命令将个人书籍导入数据库</li>
</ol>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">calibredb add "/media/Books/代码相关" --add --duplicates --ignore "*.md" --recurse --library-path=/root/tmp/bookslib</span><br></pre></td></tr></table></figure>

<p>上述表示递归添加<code>media/Books/代码相关</code>目录下所有支持图书，不含<code>md</code>，并允许重复，最后规定了<code>metadata.db</code>的路径</p>
<blockquote>
<p>其他指令参照官方man<a href="https://manual.calibre-ebook.com/generated/en/calibredb.html" target="_blank" rel="noopener">手册</a></p>
</blockquote>
<h4 id="kindle推送配置"><a href="#kindle推送配置" class="headerlink" title="kindle推送配置"></a>kindle推送配置</h4><blockquote>
<p>详见后台配置</p>
</blockquote>
<h4 id="opds配置"><a href="#opds配置" class="headerlink" title="opds配置"></a>opds配置</h4><blockquote>
<p><a href="https://site/opds" target="_blank" rel="noopener">https://site/opds</a></p>
<p>站点后加<code>opds</code>就是opds地址，导入其他软件可用</p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200804105005437.png" alt="image-20200804105005437"></p>
<h3 id="愉快看书-收藏"><a href="#愉快看书-收藏" class="headerlink" title="愉快看书(收藏)"></a>愉快看书(收藏)</h3><ul>
<li><p><a href="https://taotao.521521.ml" target="_blank" rel="noopener">https://taotao.521521.ml</a>  导入了GD珍藏的几个T的书库</p>
</li>
<li><p><a href="https://book.crushing.xyz" target="_blank" rel="noopener">https://book.crushing.xyz</a>  演示，只有一本</p>
<blockquote>
<p>利用OD和GD大容量，个人图书馆，爽~</p>
<p>也许只是收藏吧~😑</p>
</blockquote>
</li>
</ul>
<hr>
<blockquote>
<p>更多配置细节还得看个人需求</p>
<p>记录探索，探索记录</p>
</blockquote>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><p><a href="https://rclone.org/install/#script-installation" target="_blank" rel="noopener">rclone</a></p>
</li>
<li><p><a href="https://calibre-ebook.com/" target="_blank" rel="noopener">Calibre</a></p>
</li>
<li><p><a href="https://github.com/janeczku/calibre-web" target="_blank" rel="noopener">Calibre-web</a></p>
</li>
<li><p><a href="https://github.com/iwestlin/gd-utils" target="_blank" rel="noopener">Gd-utils</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>玩玩</category>
        <category>资源</category>
      </categories>
      <tags>
        <tag>个人书库</tag>
        <tag>Calibre</tag>
        <tag>rclone</tag>
        <tag>google drive</tag>
      </tags>
  </entry>
  <entry>
    <title>Docker运行macOS?Docker-OSX</title>
    <url>/posts/a2b6.html</url>
    <content><![CDATA[<h2 id="Docker的mac镜像"><a href="#Docker的mac镜像" class="headerlink" title="Docker的mac镜像"></a>Docker的mac镜像</h2><ol>
<li><a href="https://github.com/sickcodes/Docker-OSX" target="_blank" rel="noopener">https://github.com/sickcodes/Docker-OSX</a></li>
<li><a href="https://github.com/kholia/OSX-KVM" target="_blank" rel="noopener">https://github.com/kholia/OSX-KVM</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>GitHub Archive Program,我的祖传代码</title>
    <url>/posts/3334.html</url>
    <content><![CDATA[<h2 id="GitHub-Archive-Program"><a href="#GitHub-Archive-Program" class="headerlink" title="GitHub Archive Program"></a>GitHub Archive Program</h2><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200718173124.png" alt="GitHub Archive Program"></p>
<p>只要2020年2月2日以前贡献过的开源代码，现在都已经被埋在北极的冰雪之下，保存一千年。</p>
<blockquote>
<p><a href="https://archiveprogram.github.com/" target="_blank" rel="noopener">GitHub Archive Program</a></p>
</blockquote>
<h2 id="个人勋章"><a href="#个人勋章" class="headerlink" title="个人勋章"></a>个人勋章</h2><p>GitHub还颁发了勋章</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200718173702.png" alt="勋章"></p>
<p>nice~</p>
<p>不论代码写的怎样,余下的BUG啥的留给1000年后的去探索吧~</p>
<hr>
]]></content>
      <categories>
        <category>日常杂记</category>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>祖传代码</tag>
      </tags>
  </entry>
  <entry>
    <title>Github官方云端IDE——CodeSpaces</title>
    <url>/posts/a764.html</url>
    <content><![CDATA[<h2 id="CodeSpaces内测"><a href="#CodeSpaces内测" class="headerlink" title="CodeSpaces内测"></a>CodeSpaces内测</h2><blockquote>
<p>官网 <a href="https://github.com/features/codespaces" target="_blank" rel="noopener">https://github.com/features/codespaces</a></p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20201006110511.gif" alt="2020-10-06 11.03.30"></p>
<h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><ul>
<li><p>内测阶段只能创建两个库，库之间是独立的。</p>
</li>
<li><p>有休眠策略，但是个性化配置会保存，在重启后仍然有效</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20201006110812.png" alt="image-20201006110811449"></p>
</li>
<li><p>使用起来跟本地vscode没有多大区别，网络由于某些原因，直连稍微有些延迟。</p>
</li>
<li><p>内置的容器保存文件不会丢失，相当于给了一台虚拟机。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>玩玩</category>
        <category>资源</category>
      </categories>
      <tags>
        <tag>Github</tag>
        <tag>Cloud IDE</tag>
        <tag>CodeSpace</tag>
      </tags>
  </entry>
  <entry>
    <title>Google在线深度学习神器colab把玩</title>
    <url>/posts/30e6.html</url>
    <content><![CDATA[<h2 id="Colaboratory入门玩"><a href="#Colaboratory入门玩" class="headerlink" title="Colaboratory入门玩"></a>Colaboratory入门玩</h2><div class="note success">
            <p><a href="https://colab.research.google.com/" target="_blank" rel="noopener">官网</a></p>
          </div>

<div class="note default">
            <p><span style="color:green">打开官网，跟着指引来一遍</span></p>
          </div>
<ul>
<li>基于Jupyter Notebook，托管于Google，使用起来大同小异，熟悉Jupyter的话，也是很方便的。</li>
<li>代码和注释并存</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810101129196.png" alt="image-20200810101129196"></li>
<li>直接可视化显示</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810101210851.png" alt="image-20200810101210851"></li>
<li>其他很多特性，比如还能再cell处评论，很方便</li>
<li>可以本地导入项目，也能Google Drive对接存储。</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810101415115.png" alt="image-20200810101415115"></p>
<div class="note default">
            <p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810101513478.png" alt="image-20200810101513478"></p><span style="color:green"><p>配置不错，对于深度学习机器学习提供了很大帮助。</p><p>其他更多在<a href="https://colab.research.google.com/notebooks/intro.ipynb" target="_blank" rel="noopener">官方教程</a><br></span></p>
          </div>

<h2 id="ssh连接"><a href="#ssh连接" class="headerlink" title="ssh连接"></a>ssh连接</h2><blockquote>
<p>尽管来说，Jupyter很方便，但是对于某些不可描述操作，还是终端内好用。所以就想办法通过ssh连接到它后端。利用到了ngrok来内网穿透。</p>
<p>脚本找了两个版本，用其中任意一个都可以。</p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810102213746.png" alt="image-20200810102213746"></p>
<h3 id="前置准备"><a href="#前置准备" class="headerlink" title="前置准备"></a>前置准备</h3><p> Sign up for <a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok</a></p>
<blockquote>
<ul>
<li><p>You don’t need to buy paid plans. If you don’t want to sign up for anything, there is <a href="https://serveo.net/" target="_blank" rel="noopener">Serveo</a> version in following link. But it is slower than <a href="https://ngrok.com/" target="_blank" rel="noopener">ngrok</a> version.</p>
<p><a href="https://github.com/demotomohiro/Google-Colaboratory-SSH-samples/blob/master/src/ssh_serveo.ipynb" target="_blank" rel="noopener">https://github.com/demotomohiro/Google-Colaboratory-SSH-samples/blob/master/src/ssh_serveo.ipynb</a></p>
<p>注册ngrok，转到token页面，为后边准备。</p>
<p><a href="https://dashboard.ngrok.com/auth/your-authtoken" target="_blank" rel="noopener">Get Your Auth Ngrok Token</a></p>
</li>
</ul>
</blockquote>
<h3 id="Version-1"><a href="#Version-1" class="headerlink" title="Version 1"></a>Version 1</h3><ol>
<li><p>复制代码到Colab任意创建一个新cell中</p>
<ul>
<li><p>ssh only</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!pip install git+https://github.com/demotomohiro/remocolab.git</span><br><span class="line">import remocolab</span><br><span class="line">remocolab.setupSSHD()</span><br></pre></td></tr></table></figure></li>
<li><p>ssh and vnc</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!pip install git+https://github.com/demotomohiro/remocolab.git</span><br><span class="line">   import remocolab</span><br><span class="line">   remocolab.setupVNC()</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>点左侧运行</p>
<ul>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810103313123.png" alt="image-20200810103313123"></li>
</ul>
</li>
<li><p>把上边复制的authtoken粘到输入框</p>
<ul>
<li>等待上边代码部署到输入框时候，粘贴token，回车</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810103458678.png" alt="image-20200810103458678"></li>
<li>然后选区域，选最近差不多，我选新加坡<img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810103619187.png" alt="image-20200810103619187"></li>
</ul>
</li>
<li><p>愉快登录ssh</p>
<ul>
<li>等待部署完成后，会显示用户名和密码，以及ssh登录命令，有手就行。</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810103851755.png" alt="image-20200810103851755"></li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810102213746.png" alt="image-20200810102213746"></li>
</ul>
</li>
</ol>
<h3 id="Version-2"><a href="#Version-2" class="headerlink" title="Version 2"></a>Version 2</h3><p>步骤类似，粘贴脚本就行了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Install useful stuff</span></span><br><span class="line">! apt install --yes ssh screen nano htop ranger git &gt; /dev/null</span><br><span class="line"><span class="comment"># SSH setting</span></span><br><span class="line">! <span class="built_in">echo</span> <span class="string">"root:carbonara"</span> | chpasswd</span><br><span class="line">! <span class="built_in">echo</span> <span class="string">"PasswordAuthentication yes"</span> &gt; /etc/ssh/sshd_config</span><br><span class="line">! <span class="built_in">echo</span> <span class="string">"PermitUserEnvironment yes"</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">! <span class="built_in">echo</span> <span class="string">"PermitRootLogin yes"</span> &gt;&gt; /etc/ssh/sshd_config</span><br><span class="line">! service ssh restart &gt; /dev/null</span><br><span class="line"><span class="comment"># Download ngrok</span></span><br><span class="line">! wget -q -c -nc https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip</span><br><span class="line">! unzip -qq -n ngrok-stable-linux-amd64.zip</span><br><span class="line"><span class="comment"># Run ngrok</span></span><br><span class="line">authtoken = <span class="string">"PUT_YOUR_TOKEN_HERE"</span></span><br><span class="line">get_ipython().system_raw(<span class="string">'./ngrok authtoken $authtoken &amp;&amp; ./ngrok tcp 22 &amp;'</span>)</span><br><span class="line">! sleep 3</span><br><span class="line"><span class="comment"># Get the address for SSH</span></span><br><span class="line">import requests</span><br><span class="line">from re import sub</span><br><span class="line">r = requests.get(<span class="string">'http://localhost:4040/api/tunnels'</span>)</span><br><span class="line">str_ssh = r.json()[<span class="string">'tunnels'</span>][0][<span class="string">'public_url'</span>]</span><br><span class="line">str_ssh = sub(<span class="string">"tcp://"</span>, <span class="string">""</span>, str_ssh)</span><br><span class="line">str_ssh = sub(<span class="string">":"</span>, <span class="string">" -p "</span>, str_ssh)</span><br><span class="line">str_ssh = <span class="string">"ssh root@"</span> + str_ssh</span><br><span class="line"><span class="built_in">print</span>(str_ssh)</span><br></pre></td></tr></table></figure>

<div class="note success">
            <span style="color:green">只需要把上边`authtoken`换成自己的，运行！</span>
          </div>

<ul>
<li>等待部署完成，ssh登录命令</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810104336106.png" alt="image-20200810104336106"></p>
<blockquote>
<p>默认密码为<code>carbonara</code></p>
<p>及时更改密码</p>
</blockquote>
<h2 id="配置vscode"><a href="#配置vscode" class="headerlink" title="配置vscode"></a>配置vscode</h2><blockquote>
<p>既然ssh连接了，各种服务也都能搭建了，这里搭建个vscode方便敲代码</p>
</blockquote>
<ol>
<li>挂载Google Drive</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Mount Google Drive and make some folders for vscode</span></span><br><span class="line">from google.colab import drive</span><br><span class="line">drive.mount(<span class="string">'/googledrive'</span>)</span><br><span class="line">! mkdir -p /googledrive/My\ Drive/colabdrive</span><br><span class="line">! mkdir -p /googledrive/My\ Drive/colabdrive/root/.<span class="built_in">local</span>/share/code-server</span><br><span class="line">! ln -s /googledrive/My\ Drive/colabdrive /</span><br><span class="line">! ln -s /googledrive/My\ Drive/colabdrive/root/.<span class="built_in">local</span>/share/code-server /root/.<span class="built_in">local</span>/share/</span><br></pre></td></tr></table></figure>

<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810104745488.png" alt="image-20200810104745488"></p>
<p>点击链接验证授权</p>
<ol start="2">
<li>下载部署<code>code-server</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">! curl -fsSL https://code-server.dev/install.sh | sh &gt; /dev/null</span><br><span class="line">! code-server --<span class="built_in">bind</span>-addr 127.0.0.1:9999 --auth none &amp;</span><br></pre></td></tr></table></figure>

<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810104901196.png" alt="image-20200810104901196"></p>
<ol start="3">
<li>本地shell运行命令映射</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -L 9999:localhost:9999 root@0.tcp.ngrok.io -p 14407</span><br></pre></td></tr></table></figure>

<p>其中9999端口为上边指定code-server端口，可以更换，但必须一致。</p>
<p>后边14407端口为ssh端口</p>
<ol start="4">
<li>愉快敲代码</li>
</ol>
<ul>
<li>打开<code>http://127.0.0.1:9999</code></li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810105129368.png" alt="image-20200810105129368"></li>
</ul>
<h2 id="其他玩法"><a href="#其他玩法" class="headerlink" title="其他玩法"></a>其他玩法</h2><ul>
<li>Aria2 离线下载</li>
<li>Youtube-dl 转存</li>
<li>Rclone</li>
<li>gd-utils</li>
<li>etc…</li>
</ul>
<blockquote>
<p>更多自己探索发现</p>
</blockquote>
<h2 id="Related"><a href="#Related" class="headerlink" title="Related"></a>Related</h2><ul>
<li><a href="https://internet-of-tomohiro.netlify.app/google_colab/ssh.en.html" target="_blank" rel="noopener">How to access Google Colaboratory using ssh</a></li>
<li><a href="https://towardsdatascience.com/colab-free-gpu-ssh-visual-studio-code-server-36fe1d3c5243" target="_blank" rel="noopener">Colab on steroids: free GPU instances with SSH access and Visual Studio Code Server</a></li>
<li><a href="https://colab.research.google.com/notebooks/intro.ipynb" target="_blank" rel="noopener">Colab Intro</a></li>
<li><a href="https://dashboard.ngrok.com/auth/your-authtoken" target="_blank" rel="noopener">Get Your Auth Ngrok Token</a></li>
<li><a href="https://www.google.com/" target="_blank" rel="noopener">Google</a></li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810100453017.png" alt="image-20200810100453017"></p>
<hr>
<hr>
<blockquote>
<p>Colab方便，但不要滥用。</p>
<p>免费版本一般12h，但更多取决于GPU使用度</p>
<p>学习，学习，学习！</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200810105410318.png" alt="image-20200810105410318"></p>
</blockquote>
]]></content>
      <categories>
        <category>玩玩</category>
        <category>资源</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Colaboratoty</tag>
        <tag>机器学习</tag>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>Java基操之Stream</title>
    <url>/posts/1b48.html</url>
    <content><![CDATA[<h2 id="Java-Stream操作"><a href="#Java-Stream操作" class="headerlink" title="Java Stream操作"></a>Java Stream操作</h2><p><a href="https://dzone.com/articles/become-a-master-of-java-streams-part-1-creating-st" target="_blank" rel="noopener">Dzone</a></p>
<p><a href="https://www.jrebel.com/blog/java-streams-cheat-sheet" target="_blank" rel="noopener">cheatsheet</a></p>
<p><a href="https://www.baeldung.com/java-8-collectors" target="_blank" rel="noopener">Collectors</a></p>
<p><a href="https://gitee.com/SnailClimb/JavaGuide/blob/master/docs/java/basic/Arrays,CollectionsCommonMethods.md" target="_blank" rel="noopener">Collections</a></p>
<blockquote>
<p>流水线式的处理数据</p>
</blockquote>
<ul>
<li>生产流的方式<ul>
<li>Collection集合</li>
<li>Map集合</li>
<li>数组</li>
</ul>
</li>
<li>中间操作<ul>
<li>Stream<T> filter(Predicate predicate)利用谓词接口进行过滤筛选.</li>
<li>Stream<T> limit(long n)截断流中数据,n为返回个数</li>
<li>Stream<T> skip(long n)指定跳过n个数据,返回剩下的流</li>
<li>static <T> Stream<T> concat(Stream a,Stream b)组合两个流成一个流</li>
<li>Stream<T> distinct()返回流中独特的元素组成的流</li>
<li>Stream<T> sorted()返回自然排序后的流</li>
<li>Stream<T> sorted(Comparator comparator)返回经过自定义比较器的排序流</li>
<li><R> Stream<R> map(Function mapper)返回经过指定函数处理的结果的流</li>
<li>IntStream mapToInt(ToIntFunction mapper)返回IntStream,源流映射成Int流</li>
</ul>
</li>
<li>终结操作<ul>
<li>一般操作<ul>
<li>void forEach(Consumer action)指定消费器,对每个流中元素进行消费</li>
<li>long count()返回流中元素个数</li>
</ul>
</li>
<li>收集操作<ul>
<li>R collect(Collector collector)把结果收集到集合中</li>
<li>Collectors<ul>
<li>public static <T> Collector toList() 收集流到List集合中</li>
<li>public static <T> Collector toSet() 收集流得到Set集合中</li>
<li>public static Collector toMap(Function keyMapper,Function valueMapper) 收集元素到Map集合中</li>
<li>此工具类返回的都是包含所有元素的Collector</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="实例操作Stream"><a href="#实例操作Stream" class="headerlink" title="实例操作Stream"></a>实例操作Stream</h4><ul>
<li>Collection生成Stream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">Stream&lt;String&gt; listStream = list.stream();</span><br><span class="line"></span><br><span class="line">Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;String&gt;();</span><br><span class="line">Stream&lt;String&gt; setStream = set.stream();</span><br></pre></td></tr></table></figure>

<ul>
<li>Map系列生成Stream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Map&lt;String,Integer&gt; map = <span class="keyword">new</span> HashMap&lt;String,Integer&gt;();</span><br><span class="line">Stream&lt;String&gt; keyStream = map.keySet().stream();</span><br><span class="line">Stream&lt;Integer&gt; valueStream = map.values().stream();</span><br><span class="line">Stream&lt;Map.Entry&lt;String,Integer&gt;&gt; entryStream = map.entrySet().stream();</span><br></pre></td></tr></table></figure>

<ul>
<li>数组生成Stream</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">String[] strArray = &#123;<span class="string">"hell"</span>,<span class="string">"world"</span>,<span class="string">"niubi"</span>&#125;;</span><br><span class="line">Stream&lt;String&gt; strStream = Stream.of(strArray);</span><br><span class="line">Stream&lt;String&gt; okStream = Stream.of(<span class="string">"jjj"</span>,<span class="string">"hahha"</span>,<span class="string">"iii"</span>);</span><br></pre></td></tr></table></figure>

<h3 id="笔记扩充"><a href="#笔记扩充" class="headerlink" title="笔记扩充"></a><a href="https://docs.holyfuck.ml/java/sugar-and-skill/java-han-shu-shi-bian-cheng" target="_blank" rel="noopener">笔记扩充</a></h3>]]></content>
      <categories>
        <category>Godway</category>
        <category>Java</category>
        <category>Basics</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>基础</tag>
        <tag>Stream</tag>
      </tags>
  </entry>
  <entry>
    <title>Java工具之jenkins</title>
    <url>/posts/a486.html</url>
    <content><![CDATA[<h2 id="Java-CI集成"><a href="#Java-CI集成" class="headerlink" title="Java CI集成"></a>Java CI集成</h2>]]></content>
      <categories>
        <category>Godway</category>
        <category>Java</category>
        <category>专题</category>
        <category>工具</category>
      </categories>
  </entry>
  <entry>
    <title>Java并发之java.util.concurrent包Overview</title>
    <url>/posts/af84.html</url>
    <content><![CDATA[<h2 id="Java并发包Overview"><a href="#Java并发包Overview" class="headerlink" title="Java并发包Overview"></a>Java并发包Overview</h2><blockquote>
<p>本文记录各种API和一些实操，方便往后使用与回顾</p>
</blockquote>
<blockquote>
<p><a href="https://docs.oracle.com/javase/8/docs/api/index.html?java/util/concurrent/package-summary.html" target="_blank" rel="noopener">官方Doc</a></p>
</blockquote>
<p>简介：Utility classes commonly useful in concurrent programming.</p>
<p>顾名思义，一些并发工具类。</p>
<h3 id="从jdk提供的src-zip总览源码"><a href="#从jdk提供的src-zip总览源码" class="headerlink" title="从jdk提供的src.zip总览源码"></a>从jdk提供的<code>src.zip</code>总览源码</h3><ul>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200814191453156.png" alt="image-20200814191453156"></p>
</li>
<li><p>本机装了很多版本，就看jdk14吧</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200814192319789.png" alt="image-20200814192319789"></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200814192413877.png" alt="image-20200814192413877"></p>
<blockquote>
<p>先了解concurrent包</p>
</blockquote>
</li>
</ul>
<h2 id="类和方法、接口等一览"><a href="#类和方法、接口等一览" class="headerlink" title="类和方法、接口等一览"></a>类和方法、接口等一览</h2><h3 id="接口一览-Interface-Summary"><a href="#接口一览-Interface-Summary" class="headerlink" title="接口一览 Interface Summary"></a>接口一览 Interface Summary</h3><table>
<thead>
<tr>
<th align="left">Interface</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingDeque.html" target="_blank" rel="noopener">BlockingDeque</a><E></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Deque.html" target="_blank" rel="noopener"><code>Deque</code></a> that additionally supports blocking operations that wait for the deque to become non-empty when retrieving an element, and wait for space to become available in the deque when storing an element.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">BlockingQueue</a><E></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html" target="_blank" rel="noopener"><code>Queue</code></a> that additionally supports operations that wait for the queue to become non-empty when retrieving an element, and wait for space to become available in the queue when storing an element.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html" target="_blank" rel="noopener">Callable</a><V></td>
<td align="left">A task that returns a result and may throw an exception.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.AsynchronousCompletionTask.html" target="_blank" rel="noopener">CompletableFuture.AsynchronousCompletionTask</a></td>
<td align="left">A marker interface identifying asynchronous tasks produced by <code>async</code> methods.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionService.html" target="_blank" rel="noopener">CompletionService</a><V></td>
<td align="left">A service that decouples the production of new asynchronous tasks from the consumption of the results of completed tasks.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html" target="_blank" rel="noopener">CompletionStage</a><T></td>
<td align="left">A stage of a possibly asynchronous computation, that performs an action or computes a value when another CompletionStage completes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html" target="_blank" rel="noopener">ConcurrentMap</a>&lt;K,V&gt;</td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Map.html" target="_blank" rel="noopener"><code>Map</code></a> providing thread safety and atomicity guarantees.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentNavigableMap.html" target="_blank" rel="noopener">ConcurrentNavigableMap</a>&lt;K,V&gt;</td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentMap.html" target="_blank" rel="noopener"><code>ConcurrentMap</code></a> supporting <a href="https://docs.oracle.com/javase/8/docs/api/java/util/NavigableMap.html" target="_blank" rel="noopener"><code>NavigableMap</code></a> operations, and recursively so for its navigable sub-maps.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Delayed.html" target="_blank" rel="noopener">Delayed</a></td>
<td align="left">A mix-in style interface for marking objects that should be acted upon after a given delay.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener">Executor</a></td>
<td align="left">An object that executes submitted <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html" target="_blank" rel="noopener"><code>Runnable</code></a> tasks.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener">ExecutorService</a></td>
<td align="left">An <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener"><code>Executor</code></a> that provides methods to manage termination and methods that can produce a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html" target="_blank" rel="noopener"><code>Future</code></a> for tracking progress of one or more asynchronous tasks.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.ForkJoinWorkerThreadFactory.html" target="_blank" rel="noopener">ForkJoinPool.ForkJoinWorkerThreadFactory</a></td>
<td align="left">Factory for creating new <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinWorkerThread.html" target="_blank" rel="noopener"><code>ForkJoinWorkerThread</code></a>s.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.ManagedBlocker.html" target="_blank" rel="noopener">ForkJoinPool.ManagedBlocker</a></td>
<td align="left">Interface for extending managed parallelism for tasks running in <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html" target="_blank" rel="noopener"><code>ForkJoinPool</code></a>s.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html" target="_blank" rel="noopener">Future</a><V></td>
<td align="left">A <code>Future</code> represents the result of an asynchronous computation.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RejectedExecutionHandler.html" target="_blank" rel="noopener">RejectedExecutionHandler</a></td>
<td align="left">A handler for tasks that cannot be executed by a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html" target="_blank" rel="noopener"><code>ThreadPoolExecutor</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RunnableFuture.html" target="_blank" rel="noopener">RunnableFuture</a><V></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html" target="_blank" rel="noopener"><code>Future</code></a> that is <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html" target="_blank" rel="noopener"><code>Runnable</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RunnableScheduledFuture.html" target="_blank" rel="noopener">RunnableScheduledFuture</a><V></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledFuture.html" target="_blank" rel="noopener"><code>ScheduledFuture</code></a> that is <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html" target="_blank" rel="noopener"><code>Runnable</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledExecutorService.html" target="_blank" rel="noopener">ScheduledExecutorService</a></td>
<td align="left">An <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a> that can schedule commands to run after a given delay, or to execute periodically.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledFuture.html" target="_blank" rel="noopener">ScheduledFuture</a><V></td>
<td align="left">A delayed result-bearing action that can be cancelled.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadFactory.html" target="_blank" rel="noopener">ThreadFactory</a></td>
<td align="left">An object that creates new threads on demand.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TransferQueue.html" target="_blank" rel="noopener">TransferQueue</a><E></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener"><code>BlockingQueue</code></a> in which producers may wait for consumers to receive elements.</td>
</tr>
</tbody></table>
<h3 id="类一览-Class-Summary"><a href="#类一览-Class-Summary" class="headerlink" title="类一览 Class Summary"></a>类一览 Class Summary</h3><table>
<thead>
<tr>
<th align="left">Class</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/AbstractExecutorService.html" target="_blank" rel="noopener">AbstractExecutorService</a></td>
<td align="left">Provides default implementations of <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a> execution methods.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ArrayBlockingQueue.html" target="_blank" rel="noopener">ArrayBlockingQueue</a><E></td>
<td align="left">A bounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">blocking queue</a> backed by an array.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html" target="_blank" rel="noopener">CompletableFuture</a><T></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html" target="_blank" rel="noopener"><code>Future</code></a> that may be explicitly completed (setting its value and status), and may be used as a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionStage.html" target="_blank" rel="noopener"><code>CompletionStage</code></a>, supporting dependent functions and actions that trigger upon its completion.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html" target="_blank" rel="noopener">ConcurrentHashMap</a>&lt;K,V&gt;</td>
<td align="left">A hash table supporting full concurrency of retrievals and high expected concurrency for updates.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.KeySetView.html" target="_blank" rel="noopener">ConcurrentHashMap.KeySetView</a>&lt;K,V&gt;</td>
<td align="left">A view of a ConcurrentHashMap as a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html" target="_blank" rel="noopener"><code>Set</code></a> of keys, in which additions may optionally be enabled by mapping to a common value.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentLinkedDeque.html" target="_blank" rel="noopener">ConcurrentLinkedDeque</a><E></td>
<td align="left">An unbounded concurrent <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Deque.html" target="_blank" rel="noopener">deque</a> based on linked nodes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentLinkedQueue.html" target="_blank" rel="noopener">ConcurrentLinkedQueue</a><E></td>
<td align="left">An unbounded thread-safe <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Queue.html" target="_blank" rel="noopener">queue</a> based on linked nodes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListMap.html" target="_blank" rel="noopener">ConcurrentSkipListMap</a>&lt;K,V&gt;</td>
<td align="left">A scalable concurrent <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentNavigableMap.html" target="_blank" rel="noopener"><code>ConcurrentNavigableMap</code></a> implementation.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListSet.html" target="_blank" rel="noopener">ConcurrentSkipListSet</a><E></td>
<td align="left">A scalable concurrent <a href="https://docs.oracle.com/javase/8/docs/api/java/util/NavigableSet.html" target="_blank" rel="noopener"><code>NavigableSet</code></a> implementation based on a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListMap.html" target="_blank" rel="noopener"><code>ConcurrentSkipListMap</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CopyOnWriteArrayList.html" target="_blank" rel="noopener">CopyOnWriteArrayList</a><E></td>
<td align="left">A thread-safe variant of <a href="https://docs.oracle.com/javase/8/docs/api/java/util/ArrayList.html" target="_blank" rel="noopener"><code>ArrayList</code></a> in which all mutative operations (<code>add</code>, <code>set</code>, and so on) are implemented by making a fresh copy of the underlying array.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CopyOnWriteArraySet.html" target="_blank" rel="noopener">CopyOnWriteArraySet</a><E></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Set.html" target="_blank" rel="noopener"><code>Set</code></a> that uses an internal <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CopyOnWriteArrayList.html" target="_blank" rel="noopener"><code>CopyOnWriteArrayList</code></a> for all of its operations.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html" target="_blank" rel="noopener">CountDownLatch</a></td>
<td align="left">A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountedCompleter.html" target="_blank" rel="noopener">CountedCompleter</a><T></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a> with a completion action performed when triggered and there are no remaining pending actions.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html" target="_blank" rel="noopener">CyclicBarrier</a></td>
<td align="left">A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/DelayQueue.html" target="_blank" rel="noopener">DelayQueue</a>&lt;E extends <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Delayed.html" target="_blank" rel="noopener">Delayed</a>&gt;</td>
<td align="left">An unbounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">blocking queue</a> of <code>Delayed</code> elements, in which an element can only be taken when its delay has expired.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Exchanger.html" target="_blank" rel="noopener">Exchanger</a><V></td>
<td align="left">A synchronization point at which threads can pair and swap elements within pairs.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorCompletionService.html" target="_blank" rel="noopener">ExecutorCompletionService</a><V></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionService.html" target="_blank" rel="noopener"><code>CompletionService</code></a> that uses a supplied <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener"><code>Executor</code></a> to execute tasks.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html" target="_blank" rel="noopener">Executors</a></td>
<td align="left">Factory and utility methods for <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener"><code>Executor</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledExecutorService.html" target="_blank" rel="noopener"><code>ScheduledExecutorService</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadFactory.html" target="_blank" rel="noopener"><code>ThreadFactory</code></a>, and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html" target="_blank" rel="noopener"><code>Callable</code></a> classes defined in this package.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html" target="_blank" rel="noopener">ForkJoinPool</a></td>
<td align="left">An <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a> for running <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a>s.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener">ForkJoinTask</a><V></td>
<td align="left">Abstract base class for tasks that run within a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html" target="_blank" rel="noopener"><code>ForkJoinPool</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinWorkerThread.html" target="_blank" rel="noopener">ForkJoinWorkerThread</a></td>
<td align="left">A thread managed by a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html" target="_blank" rel="noopener"><code>ForkJoinPool</code></a>, which executes <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a>s.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html" target="_blank" rel="noopener">FutureTask</a><V></td>
<td align="left">A cancellable asynchronous computation.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedBlockingDeque.html" target="_blank" rel="noopener">LinkedBlockingDeque</a><E></td>
<td align="left">An optionally-bounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingDeque.html" target="_blank" rel="noopener">blocking deque</a> based on linked nodes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedBlockingQueue.html" target="_blank" rel="noopener">LinkedBlockingQueue</a><E></td>
<td align="left">An optionally-bounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">blocking queue</a> based on linked nodes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedTransferQueue.html" target="_blank" rel="noopener">LinkedTransferQueue</a><E></td>
<td align="left">An unbounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TransferQueue.html" target="_blank" rel="noopener"><code>TransferQueue</code></a> based on linked nodes.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Phaser.html" target="_blank" rel="noopener">Phaser</a></td>
<td align="left">A reusable synchronization barrier, similar in functionality to <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html" target="_blank" rel="noopener"><code>CyclicBarrier</code></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html" target="_blank" rel="noopener"><code>CountDownLatch</code></a> but supporting more flexible usage.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/PriorityBlockingQueue.html" target="_blank" rel="noopener">PriorityBlockingQueue</a><E></td>
<td align="left">An unbounded <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">blocking queue</a> that uses the same ordering rules as class <a href="https://docs.oracle.com/javase/8/docs/api/java/util/PriorityQueue.html" target="_blank" rel="noopener"><code>PriorityQueue</code></a> and supplies blocking retrieval operations.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RecursiveAction.html" target="_blank" rel="noopener">RecursiveAction</a></td>
<td align="left">A recursive resultless <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RecursiveTask.html" target="_blank" rel="noopener">RecursiveTask</a><V></td>
<td align="left">A recursive result-bearing <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html" target="_blank" rel="noopener">ScheduledThreadPoolExecutor</a></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html" target="_blank" rel="noopener"><code>ThreadPoolExecutor</code></a> that can additionally schedule commands to run after a given delay, or to execute periodically.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Semaphore.html" target="_blank" rel="noopener">Semaphore</a></td>
<td align="left">A counting semaphore.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/SynchronousQueue.html" target="_blank" rel="noopener">SynchronousQueue</a><E></td>
<td align="left">A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener">blocking queue</a> in which each insert operation must wait for a corresponding remove operation by another thread, and vice versa.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadLocalRandom.html" target="_blank" rel="noopener">ThreadLocalRandom</a></td>
<td align="left">A random number generator isolated to the current thread.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html" target="_blank" rel="noopener">ThreadPoolExecutor</a></td>
<td align="left">An <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a> that executes each submitted task using one of possibly several pooled threads, normally configured using <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html" target="_blank" rel="noopener"><code>Executors</code></a> factory methods.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html" target="_blank" rel="noopener">ThreadPoolExecutor.AbortPolicy</a></td>
<td align="left">A handler for rejected tasks that throws a <code>RejectedExecutionException</code>.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.CallerRunsPolicy.html" target="_blank" rel="noopener">ThreadPoolExecutor.CallerRunsPolicy</a></td>
<td align="left">A handler for rejected tasks that runs the rejected task directly in the calling thread of the <code>execute</code> method, unless the executor has been shut down, in which case the task is discarded.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.DiscardOldestPolicy.html" target="_blank" rel="noopener">ThreadPoolExecutor.DiscardOldestPolicy</a></td>
<td align="left">A handler for rejected tasks that discards the oldest unhandled request and then retries <code>execute</code>, unless the executor is shut down, in which case the task is discarded.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.DiscardPolicy.html" target="_blank" rel="noopener">ThreadPoolExecutor.DiscardPolicy</a></td>
<td align="left">A handler for rejected tasks that silently discards the rejected task.</td>
</tr>
</tbody></table>
<h3 id="枚举类Enum-Summary"><a href="#枚举类Enum-Summary" class="headerlink" title="枚举类Enum Summary"></a>枚举类Enum Summary</h3><table>
<thead>
<tr>
<th align="left">Enum</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html" target="_blank" rel="noopener">TimeUnit</a></td>
<td align="left">A <code>TimeUnit</code> represents time durations at a given unit of granularity and provides utility methods to convert across units, and to perform timing and delay operations in these units.</td>
</tr>
</tbody></table>
<h3 id="异常类-Exception-Summary"><a href="#异常类-Exception-Summary" class="headerlink" title="异常类 Exception Summary"></a>异常类 Exception Summary</h3><table>
<thead>
<tr>
<th align="left">Exception</th>
<th align="left">Description</th>
</tr>
</thead>
<tbody><tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BrokenBarrierException.html" target="_blank" rel="noopener">BrokenBarrierException</a></td>
<td align="left">Exception thrown when a thread tries to wait upon a barrier that is in a broken state, or which enters the broken state while the thread is waiting.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CancellationException.html" target="_blank" rel="noopener">CancellationException</a></td>
<td align="left">Exception indicating that the result of a value-producing task, such as a <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html" target="_blank" rel="noopener"><code>FutureTask</code></a>, cannot be retrieved because the task was cancelled.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletionException.html" target="_blank" rel="noopener">CompletionException</a></td>
<td align="left">Exception thrown when an error or other exception is encountered in the course of completing a result or task.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutionException.html" target="_blank" rel="noopener">ExecutionException</a></td>
<td align="left">Exception thrown when attempting to retrieve the result of a task that aborted by throwing an exception.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RejectedExecutionException.html" target="_blank" rel="noopener">RejectedExecutionException</a></td>
<td align="left">Exception thrown by an <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener"><code>Executor</code></a> when a task cannot be accepted for execution.</td>
</tr>
<tr>
<td align="left"><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeoutException.html" target="_blank" rel="noopener">TimeoutException</a></td>
<td align="left">Exception thrown when a blocking operation times out.</td>
</tr>
</tbody></table>
<h2 id="核心组件"><a href="#核心组件" class="headerlink" title="核心组件"></a>核心组件</h2><blockquote>
<p>Utility classes commonly useful in concurrent programming. This package includes a few small standardized extensible frameworks, as well as some classes that provide useful functionality and are otherwise tedious or difficult to implement. Here are brief descriptions of the main components. See also the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/locks/package-summary.html" target="_blank" rel="noopener"><code>java.util.concurrent.locks</code></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/atomic/package-summary.html" target="_blank" rel="noopener"><code>java.util.concurrent.atomic</code></a> packages.</p>
</blockquote>
<blockquote>
<p>这些工具类包含一些可拓展框架，同时有些也是不好理解和使用的。</p>
</blockquote>
<blockquote>
<p>concurrent包下还有<code>locks</code>和<code>atomic</code>子包，先不看它。</p>
</blockquote>
<h3 id="Executors"><a href="#Executors" class="headerlink" title="Executors"></a>Executors</h3><ul>
<li><p><strong>Interfaces.</strong> <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html" target="_blank" rel="noopener"><code>Executor</code></a> is a simple standardized interface for defining custom thread-like subsystems, including thread pools, asynchronous I/O, and lightweight task frameworks. Depending on which concrete Executor class is being used, tasks may execute in a newly created thread, an existing task-execution thread, or the thread calling <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html#execute-java.lang.Runnable-" target="_blank" rel="noopener"><code>execute</code></a>, and may execute sequentially or concurrently. <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html" target="_blank" rel="noopener"><code>ExecutorService</code></a> provides a more complete asynchronous task execution framework. An ExecutorService manages queuing and scheduling of tasks, and allows controlled shutdown. The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledExecutorService.html" target="_blank" rel="noopener"><code>ScheduledExecutorService</code></a> subinterface and associated interfaces add support for delayed and periodic task execution. ExecutorServices provide methods arranging asynchronous execution of any function expressed as <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Callable.html" target="_blank" rel="noopener"><code>Callable</code></a>, the result-bearing analog of <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Runnable.html" target="_blank" rel="noopener"><code>Runnable</code></a>. A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Future.html" target="_blank" rel="noopener"><code>Future</code></a> returns the results of a function, allows determination of whether execution has completed, and provides a means to cancel execution. A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/RunnableFuture.html" target="_blank" rel="noopener"><code>RunnableFuture</code></a> is a <code>Future</code> that possesses a <code>run</code> method that upon execution, sets its results.</p>
</li>
<li><p><strong>Implementations.</strong> Classes <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ThreadPoolExecutor.html" target="_blank" rel="noopener"><code>ThreadPoolExecutor</code></a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ScheduledThreadPoolExecutor.html" target="_blank" rel="noopener"><code>ScheduledThreadPoolExecutor</code></a> provide tunable, flexible thread pools. The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executors.html" target="_blank" rel="noopener"><code>Executors</code></a> class provides factory methods for the most common kinds and configurations of Executors, as well as a few utility methods for using them. Other utilities based on <code>Executors</code> include the concrete class <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/FutureTask.html" target="_blank" rel="noopener"><code>FutureTask</code></a> providing a common extensible implementation of Futures, and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorCompletionService.html" target="_blank" rel="noopener"><code>ExecutorCompletionService</code></a>, that assists in coordinating the processing of groups of asynchronous tasks.</p>
</li>
<li><p>Class <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinPool.html" target="_blank" rel="noopener"><code>ForkJoinPool</code></a> provides an Executor primarily designed for processing instances of <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ForkJoinTask.html" target="_blank" rel="noopener"><code>ForkJoinTask</code></a> and its subclasses. These classes employ a work-stealing scheduler that attains high throughput for tasks conforming to restrictions that often hold in computation-intensive parallel processing.</p>
</li>
</ul>
<h3 id="Queues"><a href="#Queues" class="headerlink" title="Queues"></a>Queues</h3><p>The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentLinkedQueue.html" target="_blank" rel="noopener"><code>ConcurrentLinkedQueue</code></a> class supplies an efficient scalable thread-safe non-blocking FIFO queue. The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentLinkedDeque.html" target="_blank" rel="noopener"><code>ConcurrentLinkedDeque</code></a> class is similar, but additionally supports the <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Deque.html" target="_blank" rel="noopener"><code>Deque</code></a> interface.</p>
<p>Five implementations in <code>java.util.concurrent</code> support the extended <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingQueue.html" target="_blank" rel="noopener"><code>BlockingQueue</code></a> interface, that defines blocking versions of put and take: <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedBlockingQueue.html" target="_blank" rel="noopener"><code>LinkedBlockingQueue</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ArrayBlockingQueue.html" target="_blank" rel="noopener"><code>ArrayBlockingQueue</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/SynchronousQueue.html" target="_blank" rel="noopener"><code>SynchronousQueue</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/PriorityBlockingQueue.html" target="_blank" rel="noopener"><code>PriorityBlockingQueue</code></a>, and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/DelayQueue.html" target="_blank" rel="noopener"><code>DelayQueue</code></a>. The different classes cover the most common usage contexts for producer-consumer, messaging, parallel tasking, and related concurrent designs.</p>
<p>Extended interface <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TransferQueue.html" target="_blank" rel="noopener"><code>TransferQueue</code></a>, and implementation <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedTransferQueue.html" target="_blank" rel="noopener"><code>LinkedTransferQueue</code></a> introduce a synchronous <code>transfer</code> method (along with related features) in which a producer may optionally block awaiting its consumer.</p>
<p>The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/BlockingDeque.html" target="_blank" rel="noopener"><code>BlockingDeque</code></a> interface extends <code>BlockingQueue</code> to support both FIFO and LIFO (stack-based) operations. Class <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/LinkedBlockingDeque.html" target="_blank" rel="noopener"><code>LinkedBlockingDeque</code></a> provides an implementation.</p>
<h3 id="Timing"><a href="#Timing" class="headerlink" title="Timing"></a>Timing</h3><p>The <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/TimeUnit.html" target="_blank" rel="noopener"><code>TimeUnit</code></a> class provides multiple granularities (including nanoseconds) for specifying and controlling time-out based operations. Most classes in the package contain operations based on time-outs in addition to indefinite waits. In all cases that time-outs are used, the time-out specifies the minimum time that the method should wait before indicating that it timed-out. Implementations make a “best effort” to detect time-outs as soon as possible after they occur. However, an indefinite amount of time may elapse between a time-out being detected and a thread actually executing again after that time-out. All methods that accept timeout parameters treat values less than or equal to zero to mean not to wait at all. To wait “forever”, you can use a value of <code>Long.MAX_VALUE</code>.</p>
<h3 id="Synchronizers"><a href="#Synchronizers" class="headerlink" title="Synchronizers"></a>Synchronizers</h3><p>Five classes aid common special-purpose synchronization idioms.</p>
<ul>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Semaphore.html" target="_blank" rel="noopener"><code>Semaphore</code></a> is a classic concurrency tool.</li>
<li><a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CountDownLatch.html" target="_blank" rel="noopener"><code>CountDownLatch</code></a> is a very simple yet very common utility for blocking until a given number of signals, events, or conditions hold.</li>
<li>A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CyclicBarrier.html" target="_blank" rel="noopener"><code>CyclicBarrier</code></a> is a resettable multiway synchronization point useful in some styles of parallel programming.</li>
<li>A <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Phaser.html" target="_blank" rel="noopener"><code>Phaser</code></a> provides a more flexible form of barrier that may be used to control phased computation among multiple threads.</li>
<li>An <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Exchanger.html" target="_blank" rel="noopener"><code>Exchanger</code></a> allows two threads to exchange objects at a rendezvous point, and is useful in several pipeline designs.</li>
</ul>
<h3 id="Concurrent-Collections"><a href="#Concurrent-Collections" class="headerlink" title="Concurrent Collections"></a>Concurrent Collections</h3><p>Besides Queues, this package supplies Collection implementations designed for use in multithreaded contexts: <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html" target="_blank" rel="noopener"><code>ConcurrentHashMap</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListMap.html" target="_blank" rel="noopener"><code>ConcurrentSkipListMap</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentSkipListSet.html" target="_blank" rel="noopener"><code>ConcurrentSkipListSet</code></a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CopyOnWriteArrayList.html" target="_blank" rel="noopener"><code>CopyOnWriteArrayList</code></a>, and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CopyOnWriteArraySet.html" target="_blank" rel="noopener"><code>CopyOnWriteArraySet</code></a>. When many threads are expected to access a given collection, a <code>ConcurrentHashMap</code> is normally preferable to a synchronized <code>HashMap</code>, and a <code>ConcurrentSkipListMap</code> is normally preferable to a synchronized <code>TreeMap</code>. A <code>CopyOnWriteArrayList</code> is preferable to a synchronized <code>ArrayList</code> when the expected number of reads and traversals greatly outnumber the number of updates to a list.</p>
<p>The “Concurrent” prefix used with some classes in this package is a shorthand indicating several differences from similar “synchronized” classes. For example <code>java.util.Hashtable</code> and <code>Collections.synchronizedMap(new HashMap())</code> are synchronized. But <a href="https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ConcurrentHashMap.html" target="_blank" rel="noopener"><code>ConcurrentHashMap</code></a> is “concurrent”. A concurrent collection is thread-safe, but not governed by a single exclusion lock. In the particular case of ConcurrentHashMap, it safely permits any number of concurrent reads as well as a tunable number of concurrent writes. “Synchronized” classes can be useful when you need to prevent all access to a collection via a single lock, at the expense of poorer scalability. In other cases in which multiple threads are expected to access a common collection, “concurrent” versions are normally preferable. And unsynchronized collections are preferable when either collections are unshared, or are accessible only when holding other locks.</p>
<p>Most concurrent Collection implementations (including most Queues) also differ from the usual <code>java.util</code> conventions in that their <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html" target="_blank" rel="noopener">Iterators</a> and <a href="https://docs.oracle.com/javase/8/docs/api/java/util/Spliterator.html" target="_blank" rel="noopener">Spliterators</a> provide <em>weakly consistent</em> rather than fast-fail traversal:</p>
<ul>
<li>they may proceed concurrently with other operations</li>
<li>they will never throw <a href="https://docs.oracle.com/javase/8/docs/api/java/util/ConcurrentModificationException.html" target="_blank" rel="noopener"><code>ConcurrentModificationException</code></a></li>
<li>they are guaranteed to traverse elements as they existed upon construction exactly once, and may (but are not guaranteed to) reflect any modifications subsequent to construction.</li>
</ul>
<h3 id="Memory-Consistency-Properties"><a href="#Memory-Consistency-Properties" class="headerlink" title="Memory Consistency Properties"></a>Memory Consistency Properties</h3><p><a href="https://docs.oracle.com/javase/specs/jls/se7/html/jls-17.html#jls-17.4.5" target="_blank" rel="noopener">Chapter 17 of the Java Language Specification</a> defines the <em>happens-before</em> relation on memory operations such as reads and writes of shared variables. The results of a write by one thread are guaranteed to be visible to a read by another thread only if the write operation <em>happens-before</em> the read operation. The <code>synchronized</code> and <code>volatile</code> constructs, as well as the <code>Thread.start()</code> and <code>Thread.join()</code> methods, can form <em>happens-before</em> relationships. In particular:</p>
<ul>
<li>Each action in a thread <em>happens-before</em> every action in that thread that comes later in the program’s order.</li>
<li>An unlock (<code>synchronized</code> block or method exit) of a monitor <em>happens-before</em> every subsequent lock (<code>synchronized</code> block or method entry) of that same monitor. And because the <em>happens-before</em> relation is transitive, all actions of a thread prior to unlocking <em>happen-before</em> all actions subsequent to any thread locking that monitor.</li>
<li>A write to a <code>volatile</code> field <em>happens-before</em> every subsequent read of that same field. Writes and reads of <code>volatile</code> fields have similar memory consistency effects as entering and exiting monitors, but do <em>not</em> entail mutual exclusion locking.</li>
<li>A call to <code>start</code> on a thread <em>happens-before</em> any action in the started thread.</li>
<li>All actions in a thread <em>happen-before</em> any other thread successfully returns from a <code>join</code> on that thread.</li>
</ul>
<p>The methods of all classes in <code>java.util.concurrent</code> and its subpackages extend these guarantees to higher-level synchronization. In particular:</p>
<ul>
<li>Actions in a thread prior to placing an object into any concurrent collection <em>happen-before</em> actions subsequent to the access or removal of that element from the collection in another thread.</li>
<li>Actions in a thread prior to the submission of a <code>Runnable</code> to an <code>Executor</code> <em>happen-before</em> its execution begins. Similarly for <code>Callables</code> submitted to an <code>ExecutorService</code>.</li>
<li>Actions taken by the asynchronous computation represented by a <code>Future</code> <em>happen-before</em> actions subsequent to the retrieval of the result via <code>Future.get()</code> in another thread.</li>
<li>Actions prior to “releasing” synchronizer methods such as <code>Lock.unlock</code>, <code>Semaphore.release</code>, and <code>CountDownLatch.countDown</code> <em>happen-before</em> actions subsequent to a successful “acquiring” method such as <code>Lock.lock</code>, <code>Semaphore.acquire</code>, <code>Condition.await</code>, and <code>CountDownLatch.await</code> on the same synchronizer object in another thread.</li>
<li>For each pair of threads that successfully exchange objects via an <code>Exchanger</code>, actions prior to the <code>exchange()</code> in each thread <em>happen-before</em> those subsequent to the corresponding <code>exchange()</code> in another thread.</li>
<li>Actions prior to calling <code>CyclicBarrier.await</code> and <code>Phaser.awaitAdvance</code> (as well as its variants) <em>happen-before</em> actions performed by the barrier action, and actions performed by the barrier action <em>happen-before</em> actions subsequent to a successful return from the corresponding <code>await</code> in other threads.</li>
</ul>
<h2 id="部分UML图"><a href="#部分UML图" class="headerlink" title="部分UML图"></a>部分UML图</h2><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://gitee.com/gentlemanhu/public-store/raw/master//images/image-20200814200448918.png" alt="image-20200814200448918"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
      <categories>
        <category>Godway</category>
        <category>Java</category>
        <category>Basics</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Concurrent</tag>
        <tag>Java并发</tag>
        <tag>源码</tag>
      </tags>
  </entry>
  <entry>
    <title>Java开发工具之Maven</title>
    <url>/posts/8113.html</url>
    <content><![CDATA[<h2 id="Java开发工具之Maven"><a href="#Java开发工具之Maven" class="headerlink" title="Java开发工具之Maven"></a>Java开发工具之Maven</h2><h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><p><a href="https://maven.apache.org/" target="_blank" rel="noopener">www</a></p>
<p><a href="https://gist.github.com/sparsick/aec73d514b1ef248d92d" target="_blank" rel="noopener">POMTemplate</a></p>
]]></content>
      <categories>
        <category>Godway</category>
        <category>Java</category>
        <category>专题</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Maven</tag>
      </tags>
  </entry>
  <entry>
    <title>Java探索之集合</title>
    <url>/posts/703e.html</url>
    <content><![CDATA[<h2 id="Java集合相关问题"><a href="#Java集合相关问题" class="headerlink" title="Java集合相关问题"></a>Java集合相关问题</h2><h3 id="List，Set，Map区别"><a href="#List，Set，Map区别" class="headerlink" title="List，Set，Map区别"></a>List，Set，Map区别</h3><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/java.png" alt=""></p>
<p><a href="https://www.javatpoint.com/collections-in-java" target="_blank" rel="noopener">Collections框架延伸</a></p>
<p><a href="https://www.javatpoint.com/java-map" target="_blank" rel="noopener">Map延伸</a></p>
<h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><ul>
<li>List（顺序）：List接口存储一组不唯一（可以多个元素引用相同对象），有序的对象。</li>
<li>Set（注重独一无二）：元素不可重复，不会多个元素引用相同对象。</li>
<li>Map（Key来搜索）：键值对存储。Map会维护与Key有关联的值，两个Key可以引用相同的对象，Key不可重复。</li>
</ul>
<h3 id="ArrayList和LinkedList区别"><a href="#ArrayList和LinkedList区别" class="headerlink" title="ArrayList和LinkedList区别"></a>ArrayList和LinkedList区别</h3><ol>
<li>是否保证线程安全：ArrayList 和LinkedList都是不同步的，线程不安全。</li>
<li>底层数据结构：ArrayList底层用的Object数组；LinkedList底层使用双向链表数据结构（JDK1.6之前为循环链表，JDK1.7取消循环）<ol start="3">
<li>插入和删除是否受元素位置影响：<ol>
<li>ArrayList采用数组存储，所以插入和删除元素时间复杂度收到元素位置影响。add(E e)，会把元素追加到列表末尾，O(1);若在指定<code>i</code>处插入或删除，(add(int index,E element))，O(n-i)，因为在进行操作时候，集合中第i和第i个元素之后的（n-i）个元素都要执行向后/向前移一位的操作。</li>
<li>LinkedList采用链表存储，碎玉add(E e)方法插入删除，时间复杂度都近似O(1)，如果要在指定位置i插入和删除元素，O(n)。</li>
</ol>
</li>
<li></li>
</ol>
</li>
</ol>
<h3 id="ArrayList扩容机制"><a href="#ArrayList扩容机制" class="headerlink" title="ArrayList扩容机制"></a>ArrayList扩容机制</h3><h3 id="HashMap和Hashtable区别"><a href="#HashMap和Hashtable区别" class="headerlink" title="HashMap和Hashtable区别"></a>HashMap和Hashtable区别</h3><h3 id="HashMap和HashSet区别"><a href="#HashMap和HashSet区别" class="headerlink" title="HashMap和HashSet区别"></a>HashMap和HashSet区别</h3><h3 id="HashSet如何检查重复"><a href="#HashSet如何检查重复" class="headerlink" title="HashSet如何检查重复"></a>HashSet如何检查重复</h3><h3 id="HashMap底层实现原理"><a href="#HashMap底层实现原理" class="headerlink" title="HashMap底层实现原理"></a>HashMap底层实现原理</h3><h3 id="为何HashMap长度是2的幂次方"><a href="#为何HashMap长度是2的幂次方" class="headerlink" title="为何HashMap长度是2的幂次方"></a>为何HashMap长度是2的幂次方</h3><h3 id="HashMap多线程死循环问题"><a href="#HashMap多线程死循环问题" class="headerlink" title="HashMap多线程死循环问题"></a>HashMap多线程死循环问题</h3><h3 id="ConcurrentHashMap和HashTable的区别"><a href="#ConcurrentHashMap和HashTable的区别" class="headerlink" title="ConcurrentHashMap和HashTable的区别"></a>ConcurrentHashMap和HashTable的区别</h3><h3 id="ConcurrentHashMap线程安全的原理"><a href="#ConcurrentHashMap线程安全的原理" class="headerlink" title="ConcurrentHashMap线程安全的原理"></a>ConcurrentHashMap线程安全的原理</h3><h3 id="comparable和Compatator的区别"><a href="#comparable和Compatator的区别" class="headerlink" title="comparable和Compatator的区别"></a>comparable和Compatator的区别</h3><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h4><h4 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h4>]]></content>
      <categories>
        <category>Godway</category>
        <category>Java</category>
        <category>Basics</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Collections</tag>
        <tag>Map</tag>
      </tags>
  </entry>
  <entry>
    <title>Kotlin开发总结</title>
    <url>/posts/31a0.html</url>
    <content><![CDATA[<h2 id="Kotlin基础"><a href="#Kotlin基础" class="headerlink" title="Kotlin基础"></a>Kotlin基础</h2><blockquote>
<p><a href="https://kotlinlang.org/docs/basic-syntax.html#variables" target="_blank" rel="noopener">Kotlin_Basics</a></p>
</blockquote>
<h3 id="类与方法"><a href="#类与方法" class="headerlink" title="类与方法"></a>类与方法</h3><blockquote>
<p><a href="https://kotlinlang.org/docs/functions.html#default-arguments" target="_blank" rel="noopener">Kotlin_Functions</a></p>
<p><a href="https://kotlinlang.org/docs/lambdas.html#lambda-expression-syntax" target="_blank" rel="noopener">Lambda</a></p>
<p>都是冒号<code>:</code>，继承，变量类型定义，都是冒号，跟在冒号后边</p>
</blockquote>
<ul>
<li><p>定义方法 <code>fun</code> functionName(): <code>T</code>{} </p>
<blockquote>
<p>用 <code>:</code>后边跟返回类型，不写默认 Unit ，可以定义泛型</p>
</blockquote>
</li>
<li><p>方法后边可直接跟表达式，返回类型编译器可以自动推断</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">sum</span><span class="params">(n1:<span class="type">Int</span>,n2:<span class="type">Int</span>)</span></span> = n1 + n2</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法的形参可以有默认值</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">nice</span><span class="params">(s1:<span class="type">String</span>=<span class="string">"我"</span>,s2:<span class="type">String</span>=<span class="string">"真NB"</span>)</span></span> = s1 + s2</span><br></pre></td></tr></table></figure>
</li>
<li><p>方法参数可以使Lambda</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">ok</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">       no:<span class="type">Boolean</span>=<span class="literal">false</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">       yes:()-&gt;<span class="type">Unit</span>=&#123;println(<span class="string">"oh yeah"</span>)</span></span>&#125;,</span><br><span class="line">      )=&#123;</span><br><span class="line">    	yes()</span><br><span class="line">   	println(no)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>参数最后一个lambda可以再调用时候直接写成代码块</p>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ok(<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="comment">// yes lambda block yes代码块</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>此方法最好写成<code>inline</code>函数，某种程度上提升性能</p>
</blockquote>
</li>
</ul>
<h3 id="判断与循环"><a href="#判断与循环" class="headerlink" title="判断与循环"></a>判断与循环</h3><h3 id="集合，in-when"><a href="#集合，in-when" class="headerlink" title="集合，in,when"></a>集合，<code>in</code>,<code>when</code></h3><h3 id="String模板"><a href="#String模板" class="headerlink" title="String模板"></a>String模板</h3><h3 id="空处理，Nullable-values-和-null-checks"><a href="#空处理，Nullable-values-和-null-checks" class="headerlink" title="空处理，Nullable values 和 null checks"></a>空处理，<code>Nullable values</code> 和 null checks</h3><h3 id="类型检查和转换，Cast"><a href="#类型检查和转换，Cast" class="headerlink" title="类型检查和转换，Cast"></a>类型检查和转换，Cast</h3><h2 id="技巧"><a href="#技巧" class="headerlink" title="技巧"></a>技巧</h2><h3 id="Extension拓展"><a href="#Extension拓展" class="headerlink" title="Extension拓展"></a>Extension拓展</h3><h3 id="inline函数"><a href="#inline函数" class="headerlink" title="inline函数"></a><code>inline</code>函数</h3><h3 id="infix函数"><a href="#infix函数" class="headerlink" title="infix函数"></a><code>infix</code>函数</h3><h3 id="data类"><a href="#data类" class="headerlink" title="data类"></a><code>data</code>类</h3><h2 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h2><p><a href="https://blog.csdn.net/usagoole/article/details/102680165" target="_blank" rel="noopener">Kotlin(八)之泛型_协变——逆变——不变</a></p>
]]></content>
      <categories>
        <category>Godway</category>
        <category>Android</category>
        <category>Kotlin</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>Android</tag>
        <tag>Kotlin</tag>
        <tag>技巧</tag>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令之cut</title>
    <url>/posts/d2e2.html</url>
    <content><![CDATA[<h2 id="Linux命令之cut"><a href="#Linux命令之cut" class="headerlink" title="Linux命令之cut"></a>Linux命令之cut</h2>]]></content>
  </entry>
  <entry>
    <title>Linux剑客之sed</title>
    <url>/posts/4dfa.html</url>
    <content><![CDATA[<div class="note info">
            <p>学习整理from <a href="https://www.gnu.org/software/sed/manual/sed.html#Command_002dLine-Options" target="_blank" rel="noopener">gun.org</a></p><p>基本直译</p>
          </div>

<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1 简介"></a>1 简介</h2><p><code>sed</code>，一个流编辑器。那么一个流编辑器就是处理转换文本的，而它的输入流，则来自管道(pipeline)。<code>sed</code>同样也支持脚本编辑，而且只让输入流(inputs)处理一次，所以更加高效。而<code>sed</code>的特性就是从管道过滤文本，这就是它的拿手好活了。</p>
<h2 id="2-Running-sed"><a href="#2-Running-sed" class="headerlink" title="2 Running sed"></a>2 Running sed</h2><p>简单介绍运行<code>sed</code>的基操</p>
<h3 id="2-1-Overview"><a href="#2-1-Overview" class="headerlink" title="2.1 Overview"></a>2.1 Overview</h3><p>通常<code>sed</code>像如下使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed SCRIPT INPUTFILE...</span><br></pre></td></tr></table></figure>

<p>比如，把<code>input.txt</code>中所有的<code>hello</code>替换成<code>world</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">'s/hello/world/'</span> input.txt &gt; output.txt</span><br></pre></td></tr></table></figure>

<p>如果不定义输入文件，或者输入文件是<code>-</code>，<code>sed</code>就从标准输入(standard input)过滤，下边结果都是一样的</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sed <span class="string">'s/hello/world/'</span> input.txt &gt; output.txt</span><br><span class="line">sed <span class="string">'s/hello/world/'</span> &lt; input.txt &gt; output.txt</span><br><span class="line">cat input.txt | sed <span class="string">'s/hello/world/'</span> - &gt; output.txt</span><br></pre></td></tr></table></figure>

<p><code>sed</code>会把结果写到标准输出流。</p>
<h3 id="2-2-命令行参数"><a href="#2-2-命令行参数" class="headerlink" title="2.2 命令行参数"></a>2.2 命令行参数</h3><h3 id="2-3-退出类型"><a href="#2-3-退出类型" class="headerlink" title="2.3 退出类型"></a>2.3 退出类型</h3><h2 id="3-sed脚本语言"><a href="#3-sed脚本语言" class="headerlink" title="3 sed脚本语言"></a>3 <code>sed</code>脚本语言</h2><h3 id="3-1-Overview"><a href="#3-1-Overview" class="headerlink" title="3.1 Overview"></a>3.1 Overview</h3><h3 id="3-2-命令汇总"><a href="#3-2-命令汇总" class="headerlink" title="3.2 命令汇总"></a>3.2 命令汇总</h3><h3 id="3-3-s-Command"><a href="#3-3-s-Command" class="headerlink" title="3.3 s Command"></a>3.3 <code>s</code> Command</h3><h3 id="3-4-常用命令"><a href="#3-4-常用命令" class="headerlink" title="3.4 常用命令"></a>3.4 常用命令</h3><h3 id="3-5-不常用命令"><a href="#3-5-不常用命令" class="headerlink" title="3.5 不常用命令"></a>3.5 不常用命令</h3><h3 id="3-6-sed针对大神的命令"><a href="#3-6-sed针对大神的命令" class="headerlink" title="3.6 sed针对大神的命令"></a>3.6 <code>sed</code>针对大神的命令</h3><h3 id="3-7-针对GUN版sed"><a href="#3-7-针对GUN版sed" class="headerlink" title="3.7 针对GUN版sed"></a>3.7 针对<code>GUN</code>版<code>sed</code></h3><h3 id="3-8-多命令情况与语法"><a href="#3-8-多命令情况与语法" class="headerlink" title="3.8 多命令情况与语法"></a>3.8 多命令情况与语法</h3><h4 id="3-8-1-多命令需要另起一行"><a href="#3-8-1-多命令需要另起一行" class="headerlink" title="3.8.1 多命令需要另起一行"></a>3.8.1 多命令需要另起一行</h4><h2 id="4-各种行操作"><a href="#4-各种行操作" class="headerlink" title="4 各种行操作"></a>4 各种行操作</h2><h3 id="4-1-Overview"><a href="#4-1-Overview" class="headerlink" title="4.1 Overview"></a>4.1 Overview</h3><h3 id="4-2-通过数字择取行"><a href="#4-2-通过数字择取行" class="headerlink" title="4.2 通过数字择取行"></a>4.2 通过数字择取行</h3><h3 id="4-3-通过匹配字符择取行"><a href="#4-3-通过匹配字符择取行" class="headerlink" title="4.3 通过匹配字符择取行"></a>4.3 通过匹配字符择取行</h3><h3 id="4-4-范围择取"><a href="#4-4-范围择取" class="headerlink" title="4.4 范围择取"></a>4.4 范围择取</h3><h2 id="5-sed正则操作"><a href="#5-sed正则操作" class="headerlink" title="5 sed正则操作"></a>5 <code>sed</code>正则操作</h2><h3 id="5-1-Overview"><a href="#5-1-Overview" class="headerlink" title="5.1 Overview"></a>5.1 Overview</h3><h3 id="5-2-Basic-BRE-正则和Extended-ERE-正则"><a href="#5-2-Basic-BRE-正则和Extended-ERE-正则" class="headerlink" title="5.2 Basic(BRE)正则和Extended(ERE)正则"></a>5.2 Basic(BRE)正则和Extended(ERE)正则</h3><h3 id="5-3-Basic正则语法"><a href="#5-3-Basic正则语法" class="headerlink" title="5.3 Basic正则语法"></a>5.3 Basic正则语法</h3><h3 id="5-4-Extended正则语法"><a href="#5-4-Extended正则语法" class="headerlink" title="5.4 Extended正则语法"></a>5.4 Extended正则语法</h3><h3 id="5-5-方括号用法"><a href="#5-5-方括号用法" class="headerlink" title="5.5 方括号用法"></a>5.5 方括号用法</h3><h3 id="5-6-正则扩展"><a href="#5-6-正则扩展" class="headerlink" title="5.6 正则扩展"></a>5.6 正则扩展</h3><h3 id="5-7-前引用与子表达"><a href="#5-7-前引用与子表达" class="headerlink" title="5.7 前引用与子表达"></a>5.7 前引用与子表达</h3><h3 id="5-8-针对特殊字符"><a href="#5-8-针对特殊字符" class="headerlink" title="5.8 针对特殊字符"></a>5.8 针对特殊字符</h3><h4 id="5-8-1-转义优先"><a href="#5-8-1-转义优先" class="headerlink" title="5.8.1 转义优先"></a>5.8.1 转义优先</h4><h3 id="5-9-多字节字符与Locale情况"><a href="#5-9-多字节字符与Locale情况" class="headerlink" title="5.9 多字节字符与Locale情况"></a>5.9 多字节字符与Locale情况</h3><h4 id="5-9-1-无效多字节字符"><a href="#5-9-1-无效多字节字符" class="headerlink" title="5.9.1 无效多字节字符"></a>5.9.1 无效多字节字符</h4><h4 id="5-9-2-大小写"><a href="#5-9-2-大小写" class="headerlink" title="5.9.2 大小写"></a>5.9.2 大小写</h4><h4 id="5-9-3-多字节正则类"><a href="#5-9-3-多字节正则类" class="headerlink" title="5.9.3 多字节正则类"></a>5.9.3 多字节正则类</h4><h2 id="6-sed高级用法-cycles和buffers"><a href="#6-sed高级用法-cycles和buffers" class="headerlink" title="6 sed高级用法:cycles和buffers"></a>6 <code>sed</code>高级用法:<code>cycles</code>和<code>buffers</code></h2><h2 id="7-一些脚本例子"><a href="#7-一些脚本例子" class="headerlink" title="7 一些脚本例子"></a>7 一些脚本例子</h2><h2 id="8-GUN版本sed的局限和优势"><a href="#8-GUN版本sed的局限和优势" class="headerlink" title="8 GUN版本sed的局限和优势"></a>8 <code>GUN</code>版本<code>sed</code>的局限和优势</h2><h2 id="9-其他学习资源"><a href="#9-其他学习资源" class="headerlink" title="9 其他学习资源"></a>9 其他学习资源</h2><h3 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h3><p><a href="https://www.grymoire.com/Unix/Sed.html" target="_blank" rel="noopener">Tutorial</a></p>
<p><a href="https://www.geeksforgeeks.org/sed-command-in-linux-unix-with-examples/" target="_blank" rel="noopener">WithExamples</a></p>
<p><a href="https://www.gnu.org/software/sed/manual/sed.html" target="_blank" rel="noopener">Manual</a></p>
<p><a href="https://share.holyfuck.ml/share/folder/1zUw48Ug7Fgv7aR7ZXWyk04ZShep3cjbU?root=1zUw48Ug7Fgv7aR7ZXWyk04ZShep3cjbU&sig=95e3c349dc71c38c52130bc069ec7694748f27374aeeef407dc73404187d9083" target="_blank" rel="noopener">精通正则表达式 提取码：grep </a></p>
<h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><blockquote>
<p>本文为个人翻译学习，鉴于认知水平和能力有限，不当之处在所难免。希望确证准确。</p>
</blockquote>
<blockquote>
<p>Contact: <a href="mailto:work@crushing.xyz">work@crushing.xyz</a></p>
</blockquote>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Linux命令之xargs</title>
    <url>/posts/db22.html</url>
    <content><![CDATA[<h2 id="Linux命令之xargs"><a href="#Linux命令之xargs" class="headerlink" title="Linux命令之xargs"></a>Linux命令之xargs</h2>]]></content>
  </entry>
  <entry>
    <title>Linux神器之asciinema</title>
    <url>/posts/d5b9.html</url>
    <content><![CDATA[<p>Original asciinema</p>
<p><a href="https://asciinema.org/docs/usage" target="_blank" rel="noopener">https://asciinema.org/docs/usage</a></p>
<ul>
<li>to gif</li>
</ul>
<p><a href="https://github.com/asciinema/asciicast2gif" target="_blank" rel="noopener">https://github.com/asciinema/asciicast2gif</a></p>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Tabby--这款终端用起来真不错</title>
    <url>/posts/4754.html</url>
    <content><![CDATA[<h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192245831.png" alt=""></p>
<ol>
<li>手下小有几个服务器, 管理起来有点麻烦.</li>
<li>想当年(去年O(∩_∩)O), 我还是个大学生, 还能白嫖Github学生包, 还能免费用<a href="https://www.termius.com/" target="_blank" rel="noopener">Termius</a>(这款ssh终端属实好用, 就是有点gui), 害, 现如今, 咱可是正经社会好公民.</li>
<li>白嫖他不香吗?</li>
</ol>
<p>找个Termius替代品, 要求:</p>
<ol>
<li>界面美观, 花里胡哨</li>
<li>高拓展性, 插件系统</li>
<li>可以同步配置(这才是根本)</li>
<li>多平台, 最好还有移动端</li>
<li>开源啊</li>
</ol>
<p>锁定以下几款</p>
<ul>
<li><a href="https://github.com/electerm/electerm" target="_blank" rel="noopener">electerm</a> 不错, 基本完美</li>
<li><a href="https://hyper.is/" target="_blank" rel="noopener">Hyper</a> 本地用完美</li>
<li><a href="https://github.com/Eugeny/tabby" target="_blank" rel="noopener">Tabby</a> 完美啊, 还有个web版本, 自己部署美滋滋, 就你了</li>
</ul>
<h2 id="Tabby体验"><a href="#Tabby体验" class="headerlink" title="Tabby体验"></a>Tabby体验</h2><blockquote>
<p><a href="https://github.com/Eugeny/tabby" target="_blank" rel="noopener">GitHub仓库地址</a></p>
</blockquote>
<h3 id="mac端体验"><a href="#mac端体验" class="headerlink" title="mac端体验"></a>mac端体验</h3><ul>
<li>主页面</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192326688.png" alt=""></p>
<ul>
<li>设置页面</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192328756.png" alt=""></p>
<p>支持分组-这点不错，不过跟Termius还是差点体验，Termius多层嵌套分组，哈哈，不过开源，想加可以自己动手</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192329335.png" alt=""></p>
<ul>
<li>同步设置</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192331027.png" alt=""></p>
<p>同步支持自定义主机，也可以用官网提供的</p>
<p><strong>这点同步有点问题，差点白费劲儿</strong> </p>
<p><strong>记得把自动同步关了，多传几个配置</strong></p>
<p>好不容易把Termius配置手动迁移过来，然后开了自动同步，然后就o了，忙活半天数据没了。还得重新迁移。</p>
<p>不行，怎么能白费劲儿呢？！</p>
<p>找log，恢复配置</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192335135.png" alt=""></p>
<p>log中，可以看到请求的content跟配置中是一致的</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192340103.png" alt=""></p>
<p>大概回想了完成的时间，根据时间把content拷入config中</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192341040.png" alt=""></p>
<p>哎呦，恢复！！完美</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192342100.png" alt=""></p>
<h3 id="web端体验"><a href="#web端体验" class="headerlink" title="web端体验"></a>web端体验</h3><ul>
<li><p>同步key可以从webapp获取</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192356700.png" alt=""></p>
</li>
<li><p>可以自定义网关，连接ssh桥更快</p>
</li>
</ul>
<p><strong>体验稍微有点卡顿</strong></p>
<h2 id="搭建Tabby-web版本"><a href="#搭建Tabby-web版本" class="headerlink" title="搭建Tabby web版本"></a>搭建Tabby web版本</h2><blockquote>
<p><a href="https://github.com/Eugeny/tabby-web" target="_blank" rel="noopener">GitHub仓库地址</a></p>
</blockquote>
<h3 id="Docker-Compose极速安装"><a href="#Docker-Compose极速安装" class="headerlink" title="Docker Compose极速安装"></a>Docker Compose极速安装</h3><ul>
<li>配置文件</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192346792.png" alt=""></p>
<ul>
<li><p>Github需要注册OAuth应用，在.env中填入对应key和secret</p>
<p><a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></p>
</li>
<li><pre class="line-numbers language-shell"><code class="language-shell">docker compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
</li>
<li><p>映射nginx反代 </p>
</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/202204192353211.png" alt=""></p>
<p>开始享用~多端同步</p>
<p>呵，先来杯茶~</p>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="https://github.com/Eugeny/tabby" target="_blank" rel="noopener">Tabby</a></li>
<li><a href="https://github.com/electerm/electerm" target="_blank" rel="noopener">electerm</a> </li>
<li><a href="https://hyper.is/" target="_blank" rel="noopener">Hyper</a></li>
<li><a href="https://github.com/Eugeny/tabby" target="_blank" rel="noopener">Tabby</a></li>
</ul>
]]></content>
      <categories>
        <category>玩玩</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Terminal</tag>
        <tag>终端</tag>
        <tag>SSH</tag>
        <tag>Termius</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux神器之tldr</title>
    <url>/posts/a7c8.html</url>
    <content><![CDATA[<h2 id="man命令和help命令"><a href="#man命令和help命令" class="headerlink" title="man命令和help命令"></a>man命令和help命令</h2><p>在使用linux过程中，帮助命令必不可少，是对于不熟练之手的神器。</p>
<p>比如，tar命令，解压压缩都得加一堆参数，而用的少就记忆不深刻，那么<code>man tar</code>就哗哗出来一堆manual文档，虽然实时查找也不会费多少时间，但还是想更简洁明了些。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/manual_tar.gif" alt=""></p>
<p>尽管也能通过help命令获得帮助。或者加上<code>grep</code>过滤筛选也能快速查看，不过，得费点手，多敲几个命令。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/tarhelp.gif" alt=""></p>
<p>然而，生命如此短暂，效率还得提升~</p>
<p>有句话叫：TL;DR   Too Long；Don’t Read . 哎，生命短暂，不要浪费</p>
<p>应运而生，<code>tldr</code>出来了</p>
<h2 id="更好用的cheatsheet——tldr"><a href="#更好用的cheatsheet——tldr" class="headerlink" title="更好用的cheatsheet——tldr"></a>更好用的cheatsheet——tldr</h2><blockquote>
<p> <a href="https://github.com/tldr-pages/tldr" target="_blank" rel="noopener">tldr</a></p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200831172534.gif" alt=""></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/tldr_tar.gif" alt=""></p>
<p>太舒服了，常用命令参数信息，很清晰列出来了。</p>
<p>相比manual，简直TLDR.</p>
<h2 id="其他平台"><a href="#其他平台" class="headerlink" title="其他平台"></a>其他平台</h2><ul>
<li><a href="https://github.com/tldr-pages/tldr#how-do-i-use-it" target="_blank" rel="noopener">文档写的非常清晰</a></li>
</ul>
<hr>
<p>mac也有一款<a href="https://mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">cheatsheet</a>，记忆好帮手，功能是显示各种快捷键的，也非常方便</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200831173454.png" alt=""></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/cheat.gif" alt=""></p>
<p>忘记快捷键？没关系，长按<code>⌘</code>，软件各种快捷键都出来了。多个快捷键不好记，一个<code>⌘</code>不是有手就行么~</p>
<hr>
<p>熟能生巧，万物之理.</p>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>Linux</category>
      </categories>
  </entry>
  <entry>
    <title>Theia,可高度定制的IDE,兼容VSCode插件</title>
    <url>/posts/fcaa.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>backdrop-filter毛玻璃效果</title>
    <url>/posts/317c.html</url>
    <content><![CDATA[<h2 id="backdrop-filter是什么"><a href="#backdrop-filter是什么" class="headerlink" title="backdrop-filter是什么"></a>backdrop-filter是什么</h2><ul>
<li><p><span style="color:yellow">跟filter类似,属性设置一样,不过它适用元素背后元素</span></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715113252.png" alt="1"></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715111850.png" alt="2"></p>
<blockquote>
<p>这种效果在苹果中很常见,最早也只有在<code>safari</code>浏览器兼容<br>通过这个属性,可以很简单地创建毛玻璃效果</p>
</blockquote>
</li>
<li><p>然而普通的filter一旦应用,所有元素都会受影响,比如字体也看不清</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715114933.png" alt="3"></p>
</li>
<li><p>通过backdrop-filter可以很好解决问题</p>
</li>
</ul>
<h2 id="本站应用此效果"><a href="#本站应用此效果" class="headerlink" title="本站应用此效果"></a>本站应用此效果</h2><ul>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715114251.png" alt="4"></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715114632.png" alt="5"></p>
</li>
</ul>
<blockquote>
<blockquote>
<p><strong>但是你可能看不到此效果,因为此特性兼容性不太好</strong></p>
</blockquote>
</blockquote>
<ul>
<li><p>通过查询<code>can i use</code>,可以看到基本国产浏览器都不支持,firefox也必须手动开启特性才能看到</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715115222.png" alt="6"></p>
</li>
<li><p>chrome很好的支持了,nice~</p>
</li>
</ul>
<h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><ul>
<li><p>经过试验,的确firefox看不到,很影响阅读</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715120111.png" alt="7"></p>
</li>
<li><p><span style="color:red">所以不兼容的请手动点网站右下角设置开启<code>夜间模式</code>,以免影响阅读</span></p>
</li>
<li><p>其他手机浏览器,chrome内核的基本都支持,qq浏览器等不支持.</p>
</li>
</ul>
<h2 id="毛玻璃其他解决方案"><a href="#毛玻璃其他解决方案" class="headerlink" title="毛玻璃其他解决方案"></a>毛玻璃其他解决方案</h2><p>其他方法可能兼容性更高,就查找了几篇</p>
<h3 id="纯css实现"><a href="#纯css实现" class="headerlink" title="纯css实现"></a>纯css实现</h3><ul>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715121000.png" alt=""></p>
</li>
<li><p>效果也是不错的,不过需要绝对布局</p>
</li>
</ul>
<blockquote>
<blockquote>
<p><a href="https://codepen.io/AmJustSam/full/ModORY/" target="_blank" rel="noopener">在线源码演示</a></p>
</blockquote>
</blockquote>
<ul>
<li>根据需求可以改改</li>
</ul>
<h3 id="用js库实现"><a href="#用js库实现" class="headerlink" title="用js库实现"></a>用js库实现</h3><ul>
<li><p><a href="https://github.com/niklasvh/html2canvas" target="_blank" rel="noopener">html2canvas</a></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200715121540.png" alt=""></p>
</li>
<li><p>这样可以动态实现毛玻璃了</p>
</li>
</ul>
<blockquote>
<blockquote>
<p><a href="https://jsfiddle.net/nallenscott/WtQjY/41/" target="_blank" rel="noopener">在线源码演示</a></p>
</blockquote>
</blockquote>
<hr>
<h4 id="总之-一个道理-”省力不省功”"><a href="#总之-一个道理-”省力不省功”" class="headerlink" title="总之,一个道理,”省力不省功”"></a><span style="color:yellow">总之,一个道理,”省力不省功”</span></h4><hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><p><a href="https://medium.com/hackernoon/how-to-do-css-only-frosted-glass-effect-e2666bafab91" target="_blank" rel="noopener">How to do CSS only frosted glass effect?</a></p>
</li>
<li><p><a href="https://codeburst.io/ios-backdrop-effect-on-chrome-and-non-webkit-browsers-summary-of-currently-available-techniques-34b0f624ae6a" target="_blank" rel="noopener">How to create iOS Backdrop effect</a></p>
</li>
<li><p><a href="https://css-tricks.com/frosting-glass-css-filters/" target="_blank" rel="noopener">Frosting Glass with CSS Filters</a></p>
</li>
<li><p><a href="http://abduzeedo.com/ios7-frosted-glass-effect-html-5-and-javascript" target="_blank" rel="noopener">iOS7 Frosted Glass Effect with HTML 5 and Javascript</a> </p>
</li>
</ul>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>FrontEnd</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>高斯模糊</tag>
        <tag>毛玻璃</tag>
      </tags>
  </entry>
  <entry>
    <title>git submodule git子模块闲搞</title>
    <url>/posts/790e.html</url>
    <content><![CDATA[<h1 id="git-submodule-折腾记"><a href="#git-submodule-折腾记" class="headerlink" title="git submodule 折腾记"></a>git submodule 折腾记</h1><h2 id="git-submodule折腾缘由"><a href="#git-submodule折腾缘由" class="headerlink" title="git submodule折腾缘由"></a>git submodule折腾缘由</h2><h3 id="博客备份"><a href="#博客备份" class="headerlink" title="博客备份"></a>博客备份</h3><blockquote>
<p>给博客整体做个备份，包含主题配置，自定义的一些内容等</p>
</blockquote>
<ul>
<li>由于主题themes文件夹内主题是从github直接clone下来的，所以下来后还是有.git，识别成了本地仓库。</li>
<li>然而在hexo博客外部根目录创建git仓库后，执行到git add -A时，会提醒子仓库问题，不会跟踪记录子仓库。</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200721204842.png" alt=""></li>
</ul>
<h2 id="具体折腾过程"><a href="#具体折腾过程" class="headerlink" title="具体折腾过程"></a>具体折腾过程</h2><h3 id="直接git-submodule-add-“path-to-theme”"><a href="#直接git-submodule-add-“path-to-theme”" class="headerlink" title="直接git submodule  add “path to theme”"></a>直接<code>git submodule  add “path to theme”</code></h3><ul>
<li><p>直接在根目录执行添加子模块，然而却不是想象的结果。</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721212247431.png" alt="image-20200721212247431"></p>
<blockquote>
<p>原本想象的是保留在原来的themes下，但是它直接clone到了根</p>
</blockquote>
</li>
<li><p>google后，发现后边还跟一个路径（还是没好好看help文档），这个路径指向themes下的话，就还保留了原本位置。</p>
<blockquote>
<p><code>git submodule add “path to theme” “themes/butterfly”</code> </p>
</blockquote>
</li>
</ul>
<h2 id="添加后还是不track"><a href="#添加后还是不track" class="headerlink" title="添加后还是不track"></a>添加后还是不track</h2><ul>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721213854942.png" alt="image-20200721213854942"></p>
</li>
<li><p>再次google后，</p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214002640.png" alt="image-20200721214002640"></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214028218.png" alt="image-20200721214028218"></p>
</li>
<li><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214055658.png" alt="image-20200721214055658"></p>
</li>
<li><p>递归执行子模块git add后并commit后，终于实现理想状态。</p>
<p>然而，在从远程拉取后，又出现了一个问题。。。</p>
</li>
</ul>
<h2 id="git-pull后，themes文件夹是空的？"><a href="#git-pull后，themes文件夹是空的？" class="headerlink" title="git pull后，themes文件夹是空的？"></a>git pull后，themes文件夹是空的？</h2><blockquote>
<p>git pull后，子模块内是空的！</p>
</blockquote>
<ul>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214439304.png" alt="image-20200721214439304"></li>
<li>而且github仓库文件夹出现了<code>文件夹@字母</code></li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214838006.png" alt="image-20200721214838006"></li>
<li>再再次google后</li>
<li><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200721214555139.png" alt="image-20200721214555139"></li>
<li>需要在子模块内再次拉取才行</li>
</ul>
<h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><ul>
<li>面向google编程，面向成功~</li>
<li>不想看文档，不想看帮助，那就多google</li>
<li>不管结果如何，先把错误复制到google搜索一顿再说</li>
<li>总之，google是走向成功的阶梯</li>
<li>“省力不省功”</li>
</ul>
<hr>
<hr>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ul>
<li><p><a href="https://forum.freecodecamp.org/t/how-to-remove-a-submodule-in-git/13228" target="_blank" rel="noopener">How to remove a submodule in Git</a></p>
</li>
<li><p><a href="http://www.huati365.com/answer/Vx2jzwLGqGvYAbM" target="_blank" rel="noopener"><strong>git add -A不在目录中添加所有修改的文件</strong></a></p>
</li>
<li><p><a href="https://stackoverflow.com/questions/50167969/how-to-fix-modified-content-untracked-content-in-git" target="_blank" rel="noopener">How to fix “modified content, untracked content” in git?</a></p>
</li>
<li><p><a href="https://git-scm.com/book/en/v2/Git-Tools-Submodules" target="_blank" rel="noopener">Git doc</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>Linux</category>
        <category>Git</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
        <tag>博客</tag>
        <tag>Git submodule</tag>
      </tags>
  </entry>
  <entry>
    <title>ide般的vim--SpaceVim</title>
    <url>/posts/22d7.html</url>
    <content><![CDATA[<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200729111613.png" alt=""></p>
<h2 id="Vim安装"><a href="#Vim安装" class="headerlink" title="Vim安装"></a>Vim安装</h2><blockquote>
<p><span style="color:green">这些基本安装不多详细描述，按照流程就行了</span></p>
</blockquote>
<blockquote>
<ul>
<li><p><a href="https://www.vim.org/" target="_blank" rel="noopener">vim官网</a></p>
</li>
<li><p>更详细和准确指南，请参照官网</p>
</li>
</ul>
</blockquote>
<h3 id="Linux或macOS安装-类unix系"><a href="#Linux或macOS安装-类unix系" class="headerlink" title="Linux或macOS安装(类unix系)"></a>Linux或macOS安装(类unix系)</h3><h4 id="使用git安装"><a href="#使用git安装" class="headerlink" title="使用git安装"></a>使用git安装</h4><blockquote>
<p>此方法通用</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/vim/vim.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> vim/src</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> make</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p> 使用此方式会获取最新版vim，包含了所有的额外补丁。</p>
</blockquote>
<h4 id="其他linux发行版"><a href="#其他linux发行版" class="headerlink" title="其他linux发行版"></a>其他linux发行版</h4><ul>
<li><a href="http://packages.debian.org/vim" target="_blank" rel="noopener">Debian</a></li>
<li><a href="http://wwws.sun.com/software/solaris/freeware/" target="_blank" rel="noopener">Sun Solaris</a></li>
<li>更多参照<a href="https://www.vim.org/" target="_blank" rel="noopener">官网</a></li>
</ul>
<h4 id="mac安装"><a href="#mac安装" class="headerlink" title="mac安装"></a>mac安装</h4><ul>
<li><code>brew install vim</code></li>
<li>安装 <code>MacVim</code>mac定制版vim</li>
<li>更多选择看官网</li>
</ul>
<h4 id="其他还有neovim等vim其他发行版本，可以选择型安装"><a href="#其他还有neovim等vim其他发行版本，可以选择型安装" class="headerlink" title="其他还有neovim等vim其他发行版本，可以选择型安装"></a>其他还有neovim等vim其他发行版本，可以选择型安装</h4><blockquote>
<p>推荐看官方文档安装，本记录简化了步骤，可能缺失部分探索的元素</p>
</blockquote>
<h3 id="Windows安装"><a href="#Windows安装" class="headerlink" title="Windows安装"></a>Windows安装</h3><blockquote>
<p>具体看<a href="https://www.vim.org" target="_blank" rel="noopener">官方教程</a></p>
</blockquote>
<hr>
<h2 id="Vim入门推荐"><a href="#Vim入门推荐" class="headerlink" title="Vim入门推荐"></a>Vim入门推荐</h2><h3 id="vimtutor命令"><a href="#vimtutor命令" class="headerlink" title="vimtutor命令"></a><code>vimtutor</code>命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vimtutor</span></span><br></pre></td></tr></table></figure>

<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200728225111148.png" alt="image-20200728225111148"></p>
<ul>
<li>进入官方指南入门教程，比较全面详细</li>
<li>英文版，英语不好的话有点吃力</li>
</ul>
<h3 id="通过游戏入门"><a href="#通过游戏入门" class="headerlink" title="通过游戏入门"></a>通过游戏入门</h3><blockquote>
<p><a href="https://vim-adventures.com/" target="_blank" rel="noopener">Learn Vim</a></p>
</blockquote>
<p>这是一款网页游戏，很有意思，vim学习起来舒服多了~</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200728225543727.png" alt="image-20200728225543727"></p>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>菜鸟教程 &lt;菜(da)鸟(shen)必备&gt;</li>
<li>Google搜索</li>
<li>官方Doc</li>
</ul>
<h2 id="SpaceVim安装与配置"><a href="#SpaceVim安装与配置" class="headerlink" title="SpaceVim安装与配置"></a>SpaceVim安装与配置</h2><blockquote>
<p><a href="[https://spacevim.org/cn/quick-start-guide/#%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE](https://spacevim.org/cn/quick-start-guide/#基本配置)">官方中文教程</a></p>
</blockquote>
<h3 id="官方一键安装脚本"><a href="#官方一键安装脚本" class="headerlink" title="官方一键安装脚本"></a>官方一键安装脚本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sLf https://spacevim.org/cn/install.sh | bash</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由于你懂得原因，使用此链接安装比较慢，请自备绿色上网工具优化体验~</p>
</blockquote>
<p>官方还有个帮助脚本，很全面，各种操作都包含了–</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sLf https://spacevim.org/cn/install.sh | bash -s -- -h</span><br></pre></td></tr></table></figure>

<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200729115058170.png" alt="image-20200729115058170"></p>
<h3 id="Docker安装（推荐）"><a href="#Docker安装（推荐）" class="headerlink" title="Docker安装（推荐）"></a>Docker安装（推荐）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull spacevim/spacevim</span><br><span class="line">docker run -it --rm spacevim/spacevim nvim</span><br></pre></td></tr></table></figure>

<blockquote>
<p>推荐docker，各种优势</p>
</blockquote>
<h3 id="入门基本配置"><a href="#入门基本配置" class="headerlink" title="入门基本配置"></a>入门基本配置</h3><p>SpaceVim默认配置文件为<code>~/.SpaceVim.d/init.toml</code>，打开此文件编辑，或者进入<code>vim</code>依次同时按<code>space f v d</code>即可快捷打开默认配置文件。</p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/20200729105949.png" alt="配置文件"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 这是一个基础的 SpaceVim 配置示例</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 所有的 SpaceVim 选项都列在 [options] 之下</span></span><br><span class="line">[options]</span><br><span class="line">    # 设置 SpaceVim 主题及背景，默认的主题是 gruvbox，如果你需要使用更</span><br><span class="line">    # 多的主题，你可以载入 colorscheme 模块</span><br><span class="line">    colorscheme = "gruvbox"</span><br><span class="line">    # 背景可以取值 "dark" 或 "light"</span><br><span class="line">    colorscheme_bg = "dark"</span><br><span class="line">    # 启用/禁用终端真色，在目前大多数终端下都是支持真色的，当然也有</span><br><span class="line">    # 一小部分终端不支持真色，如果你的 SpaceVim 颜色看上去比较怪异</span><br><span class="line">    # 可以禁用终端真色，将下面的值设为 false</span><br><span class="line">    enable_guicolors = true</span><br><span class="line">    # 设置状态栏上分割符号形状，如果字体安装失败，可以将值设为 "nil" 以</span><br><span class="line">    # 禁用分割符号，默认为箭头 "arrow"</span><br><span class="line">    statusline_separator = "nil"</span><br><span class="line">    statusline_inactive_separator = "bar"</span><br><span class="line">    # 设置顶部标签列表序号类型，有以下五种类型，分别是 0 - 4</span><br><span class="line">    # 0: 1 ➛ ➊</span><br><span class="line">    # 1: 1 ➛ ➀</span><br><span class="line">    # 2: 1 ➛ ⓵</span><br><span class="line">    # 3: 1 ➛ ¹</span><br><span class="line">    # 4: 1 ➛ 1</span><br><span class="line">    buffer_index_type = 4</span><br><span class="line">    # 显示/隐藏顶部标签栏上的文件类型图标，这一图标需要安装 nerd fonts，</span><br><span class="line">    # 如果未能成功安装这一字体，可以隐藏图标</span><br><span class="line">    enable_tabline_filetype_icon = true</span><br><span class="line">    # 是否在状态栏上显示当前模式，默认情况下，不显示 Normal/Insert 等</span><br><span class="line">    # 字样，只以颜色区分当前模式</span><br><span class="line">    enable_statusline_mode = false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> SpaceVim 模块设置，主要包括启用/禁用模块</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用 autocomplete 模块，启用模块时，可以列出一些模块选项，并赋值，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关于模块的选项，请阅读各个模块的文档</span></span><br><span class="line">[[layers]]</span><br><span class="line">    name = "autocomplete"</span><br><span class="line">    auto-completion-return-key-behavior = "complete"</span><br><span class="line">    auto-completion-tab-key-behavior = "cycle"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 禁用 shell 模块，禁用模块时，需要加入 <span class="built_in">enable</span> = <span class="literal">false</span></span></span><br><span class="line">[[layers]]</span><br><span class="line">    name = "shell"</span><br><span class="line">    enable = false</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加自定义插件</span></span><br><span class="line">[[custom_plugins]]</span><br><span class="line">    repo = "lilydjwg/colorizer"</span><br><span class="line">    merged = false</span><br></pre></td></tr></table></figure>

<p>更多配置，更多DIY，参照<a href="https://spacevim.org/cn/documentation/" target="_blank" rel="noopener">官方文档</a>进行配置</p>
<h2 id="SpaceVim的Java环境配置"><a href="#SpaceVim的Java环境配置" class="headerlink" title="SpaceVim的Java环境配置"></a>SpaceVim的Java环境配置</h2><blockquote>
<p>就拿Java搭建吧</p>
<p><a href="https://spacevim.org/cn/use-vim-as-a-java-ide/" target="_blank" rel="noopener">官方教程</a></p>
</blockquote>
<h3 id="启动模块"><a href="#启动模块" class="headerlink" title="启动模块"></a>启动模块</h3><p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200729112831999.png" alt="image-20200729112831999"></p>
<blockquote>
<p>启用 <code>lang#java</code> 模块后，在打开 java 文件时，就可以使用语言专属快捷键，这些快捷键都是以 <code>SPC l</code> 为前缀的。</p>
</blockquote>
<blockquote>
<p><code>lang#java</code> 模块主要采用插件 vim-javacomplete2，该插件可以自动读取工程配置文件，获取当前项目的 classpath， 目前支持的项目包括 maven、gradle 以及 eclipse 下的配置文件。</p>
</blockquote>
<h3 id="配置语言服务"><a href="#配置语言服务" class="headerlink" title="配置语言服务"></a>配置语言服务</h3><blockquote>
<p>若需要启动 Java 语言服务支持，可以启用 lsp 模块，以下配置示例使用 <a href="http://ftp.yz.yamagata-u.ac.jp/pub/eclipse/jdtls/snapshots/jdt-language-server-latest.tar.gz" target="_blank" rel="noopener">eclipse.jdt.ls</a>，下载后并解压：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[[layers]]</span><br><span class="line">  name = "lsp"</span><br><span class="line">  filetypes = [</span><br><span class="line">    "java"</span><br><span class="line">  ]</span><br><span class="line">  [layers.override_cmd]</span><br><span class="line">    java = [</span><br><span class="line">    "java",</span><br><span class="line">    "-Declipse.application=org.eclipse.jdt.ls.core.id1",</span><br><span class="line">    "-Dosgi.bundles.defaultStartLevel=4",</span><br><span class="line">    "-Declipse.product=org.eclipse.jdt.ls.core.product",</span><br><span class="line">    "-Dlog.protocol=true",</span><br><span class="line">    "-Dlog.level=NONE",</span><br><span class="line">    "-noverify",</span><br><span class="line">    "-Xmx1G",</span><br><span class="line">    "-jar",</span><br><span class="line">    "/Users/gentlemanhu/Documents/SomeStuff/forDev&amp;some\ tools/jdt/jdt-language-server-latest/plugins/org.eclipse.equinox.launcher_1.5.700.v20200207-2156.jar",</span><br><span class="line">    "-configuration",</span><br><span class="line">    "/Users/gentlemanhu/Documents/SomeStuff/forDev&amp;some\ tools/jdt/jdt-language-server-latest/config_mac",</span><br><span class="line">    "-data",</span><br><span class="line"> "/Users/gentlemanhu/Documents/Codes/Languages&amp;Explore/Java/.cache/javalsp"</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure>

<p>基本上就需要配置三个路径，</p>
<ul>
<li><code>-jar</code>：lanucher路径</li>
<li><code>-configuration</code>: 平台相关的配置文件路径</li>
<li><code>-data</code>: 语言服务器运行位置</li>
</ul>
<h3 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h3><blockquote>
<p><code>vim-javacomplete2</code>为 java 项目提供了很好的代码补全功能，配合 <code>autocomplete</code>模块，可以在编辑代码时实时补全代码，并且可以模糊匹配。</p>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200729114439267.png" alt="image-20200729114439267"></p>
<h3 id="插件模块自动安装"><a href="#插件模块自动安装" class="headerlink" title="插件模块自动安装"></a>插件模块自动安装</h3><ul>
<li>不需要过多操作，配置好文件，再打开vim就自动安装了，很舒服</li>
</ul>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200729114722809.png" alt="image-20200729114722809"></p>
<h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><ul>
<li>语法树</li>
<li>交互编程</li>
<li>语法检查</li>
<li>等等</li>
<li>具体配置看<a href="[https://spacevim.org/cn/use-vim-as-a-java-ide/#%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%BC%96%E7%A8%8B](https://spacevim.org/cn/use-vim-as-a-java-ide/#交互式编程)">官方文档</a></li>
</ul>
<blockquote>
<p>要想配置成合自己口味的，还得自己去摸索实践~</p>
</blockquote>
<h3 id="报错问题解决"><a href="#报错问题解决" class="headerlink" title="报错问题解决"></a>报错问题解决</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[vimproc] vimproc's DLL: "/Users/gentl...Please read :help vimproc and make it.</span><br></pre></td></tr></table></figure>

<p>不论打开vim还是neovim，都会在下方报错</p>
<p>那就根据指示修复吧<code>:help vimproc</code></p>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/image-20200729115331844.png" alt="image-20200729115331844"></p>
<blockquote>
<p>写的就是它是很牛逼的异步库，让我们安装，那就安装吧</p>
</blockquote>
<blockquote>
<p><a href="https://github.com/Shougo/vimproc.vim" target="_blank" rel="noopener">Vimproc.vim</a></p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/Shougo/vimproc.vim</span><br></pre></td></tr></table></figure>

<p>克隆到~/.vim/bundle/目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd vimproc.vim/</span><br><span class="line">make</span><br></pre></td></tr></table></figure>

<p>然后再打开vim就自动安装了，没有报错了</p>
<h2 id="Resources"><a href="#Resources" class="headerlink" title="Resources"></a>Resources</h2><ul>
<li><a href="https://everettjf.gitbooks.io/spacevimtutorial/content/" target="_blank" rel="noopener">SpaceVim入门</a></li>
<li><a href="https://github.com/Gabirel/Hack-SpaceVim" target="_blank" rel="noopener">HackSpaceVim</a></li>
<li><a href="https://spacevim.org/cn/documentation/" target="_blank" rel="noopener">官方文档</a></li>
</ul>
<hr>
<blockquote>
<p>有了这个ide，还要什么鼠标，各种快捷键，双手不离键盘，真·键盘侠~</p>
</blockquote>
<blockquote>
<p>这些东西，一时兴起也可以玩玩。当然只有不断熟悉，不断使用，才能真正发挥其强大的功能和特性。</p>
</blockquote>
<blockquote>
<p>适合自己的才是最好的，vscode+extensions||neovim+plugins.</p>
</blockquote>
]]></content>
      <categories>
        <category>编程杂记</category>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>VScode</tag>
        <tag>Vim</tag>
        <tag>Ide</tag>
        <tag>SpaceVim</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>关于invoke和call的区别</title>
    <url>/posts/8507.html</url>
    <content><![CDATA[<h1 id="关于invoke和call的区别"><a href="#关于invoke和call的区别" class="headerlink" title="关于invoke和call的区别"></a>关于invoke和call的区别</h1><ul>
<li><p>Function calling is when you call a function yourself in a program.</p>
</li>
<li><p>While function invoking is when it gets called automatically.</p>
</li>
</ul>
<blockquote>
<p><span style="color:yellow">call是你主动call函数或方法的,invoke是程序自动触发或被触发的.</span></p>
</blockquote>
<blockquote>
<blockquote>
<p><em><a href="https://www.quora.com/What-is-the-difference-between-call-and-invoke" target="_blank" rel="noopener">具体答案</a></em></p>
</blockquote>
</blockquote>
<p><img src= "https://cdn.jsdelivr.net/gh/GentlemanHu/GentlemanHu.github.io@0a07ead/img/loading.gif" data-src="https://cdn.jsdelivr.net/gh/gentlemanhu/public-store/images/original-vofan-long+hair-highres-open+mouth-blue+eyes.jpg" alt="cover"></p>
<h1 id="干就完了"><a href="#干就完了" class="headerlink" title="干就完了"></a>干就完了</h1>]]></content>
      <categories>
        <category>编程杂记</category>
        <category>随手记</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>编程日常</tag>
        <tag>关键字</tag>
      </tags>
  </entry>
</search>
